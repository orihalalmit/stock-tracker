{"ast":null,"code":"var _jsxFileName = \"/Users/orihalamit/Projects/dev/trading/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport StockCard from './components/StockCard';\nimport CurrencyCard from './components/CurrencyCard';\nimport BitcoinCard from './components/BitcoinCard';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport PortfolioPage from './components/Portfolio/PortfolioPage';\nimport WatchlistsPage from './components/Watchlists/WatchlistsPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeTab, setActiveTab] = useState('portfolio'); // market, portfolio, watchlists\n  const [stocks, setStocks] = useState([]);\n  const [usdIls, setUsdIls] = useState(null);\n  const [bitcoin, setBitcoin] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [marketConfig, setMarketConfig] = useState(null);\n  const [isEditingMarket, setIsEditingMarket] = useState(false);\n  const fetchUsdIlsData = async () => {\n    try {\n      const response = await axios.get('/api/forex/usdils');\n      setUsdIls(response.data);\n    } catch (err) {\n      console.error('Error fetching USD/ILS data:', err);\n      setUsdIls({\n        symbol: 'USD/ILS',\n        rate: 0,\n        previousRate: 0,\n        dailyChange: 0,\n        dailyChangePercent: 0,\n        timestamp: new Date().toISOString(),\n        lastUpdated: 'N/A',\n        error: 'Failed to fetch rate'\n      });\n    }\n  };\n  const fetchBitcoinData = async () => {\n    try {\n      const response = await axios.get('/api/crypto/bitcoin');\n      setBitcoin(response.data);\n    } catch (err) {\n      console.error('Error fetching Bitcoin data:', err);\n      setBitcoin({\n        symbol: 'BTC/USD',\n        price: 0,\n        previousPrice: 0,\n        dailyChange: 0,\n        dailyChangePercent: 0,\n        timestamp: new Date().toISOString(),\n        error: 'Failed to fetch Bitcoin price'\n      });\n    }\n  };\n  const fetchMarketConfig = async () => {\n    try {\n      const response = await axios.get('/api/market/config');\n      setMarketConfig(response.data);\n      return response.data;\n    } catch (err) {\n      console.error('Error fetching market config:', err);\n      // Return default config if API fails\n      return {\n        sections: [{\n          name: 'Currency',\n          symbols: [],\n          enabled: true\n        }, {\n          name: 'Major Indices & ETFs',\n          symbols: ['SPY', 'QQQ', 'IWM', 'RSP', 'MAGS'],\n          enabled: true\n        }, {\n          name: 'Volatility ETFs',\n          symbols: ['VXX', 'UVXY', 'SVXY'],\n          enabled: true\n        }, {\n          name: 'Individual Stocks',\n          symbols: ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', 'NVDA', 'META', 'PLTR', 'HIMS'],\n          enabled: true\n        }, {\n          name: 'Bitcoin & Ethereum',\n          symbols: ['IBIT', 'ETHE', 'ETHW'],\n          enabled: true\n        }]\n      };\n    }\n  };\n  const fetchStockData = async () => {\n    try {\n      setLoading(true);\n\n      // Get market configuration\n      const config = marketConfig || (await fetchMarketConfig());\n\n      // Collect all symbols from enabled sections\n      const allSymbols = new Set();\n      config.sections.filter(section => section.enabled && section.name !== 'Currency' && section.name !== 'Bitcoin & Ethereum').forEach(section => {\n        section.symbols.forEach(symbol => allSymbols.add(symbol));\n      });\n      const tickers = Array.from(allSymbols);\n\n      // Fetch stock data, USD/ILS data, and Bitcoin data in parallel\n      const [stockResponse] = await Promise.all([axios.get(`/api/stocks/snapshots?symbols=${tickers.join(',')}`), fetchUsdIlsData(), fetchBitcoinData()]);\n      if (stockResponse.data && stockResponse.data.snapshots) {\n        const stockData = Object.entries(stockResponse.data.snapshots).filter(([symbol, data]) => {\n          var _data$latestTrade, _data$latestQuote, _data$latestQuote2;\n          // Filter out symbols with no data\n          return data && (((_data$latestTrade = data.latestTrade) === null || _data$latestTrade === void 0 ? void 0 : _data$latestTrade.p) || ((_data$latestQuote = data.latestQuote) === null || _data$latestQuote === void 0 ? void 0 : _data$latestQuote.ap) || ((_data$latestQuote2 = data.latestQuote) === null || _data$latestQuote2 === void 0 ? void 0 : _data$latestQuote2.bp));\n        }).map(([symbol, data]) => {\n          var _data$latestTrade2, _data$latestQuote3, _data$latestQuote4, _data$dailyBar, _data$prevDailyBar, _data$dailyBar2, _data$dailyBar3, _data$dailyBar4;\n          // Use latestTrade price if available, otherwise use latestQuote ask/bid\n          const currentPrice = ((_data$latestTrade2 = data.latestTrade) === null || _data$latestTrade2 === void 0 ? void 0 : _data$latestTrade2.p) || ((_data$latestQuote3 = data.latestQuote) === null || _data$latestQuote3 === void 0 ? void 0 : _data$latestQuote3.ap) || ((_data$latestQuote4 = data.latestQuote) === null || _data$latestQuote4 === void 0 ? void 0 : _data$latestQuote4.bp) || 0;\n          const openPrice = ((_data$dailyBar = data.dailyBar) === null || _data$dailyBar === void 0 ? void 0 : _data$dailyBar.o) || 0;\n          const prevClose = ((_data$prevDailyBar = data.prevDailyBar) === null || _data$prevDailyBar === void 0 ? void 0 : _data$prevDailyBar.c) || 0;\n\n          // Calculate change from previous close if available, otherwise from open\n          const referencePrice = prevClose || openPrice;\n          const change = referencePrice ? currentPrice - referencePrice : 0;\n          const changePercent = referencePrice ? change / referencePrice * 100 : 0;\n          return {\n            symbol,\n            price: currentPrice,\n            change,\n            changePercent,\n            volume: ((_data$dailyBar2 = data.dailyBar) === null || _data$dailyBar2 === void 0 ? void 0 : _data$dailyBar2.v) || 0,\n            high: ((_data$dailyBar3 = data.dailyBar) === null || _data$dailyBar3 === void 0 ? void 0 : _data$dailyBar3.h) || 0,\n            low: ((_data$dailyBar4 = data.dailyBar) === null || _data$dailyBar4 === void 0 ? void 0 : _data$dailyBar4.l) || 0,\n            open: openPrice,\n            close: prevClose\n          };\n        });\n        setStocks(stockData);\n        setLastUpdated(new Date());\n\n        // Show info message if some symbols were filtered out\n        if (stockData.length < tickers.length) {\n          console.log(`Note: ${tickers.length - stockData.length} symbols were not available or had no data`);\n          console.log('Note: VIX, TA35, and TA125 are not supported by Alpaca API. Using VXX, UVXY, SVXY as VIX alternatives.');\n        }\n        setError(null);\n      } else {\n        setError('No market data available. Please check your API configuration.');\n      }\n    } catch (err) {\n      console.error('Error fetching stock data:', err);\n      setError('Failed to fetch stock data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (activeTab === 'market') {\n      fetchStockData();\n\n      // Auto-refresh every 30 seconds only when market tab is active\n      const interval = setInterval(fetchStockData, 30000);\n      return () => clearInterval(interval);\n    }\n  }, [activeTab]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Market configuration editing functions\n  const editSection = section => {\n    const newName = prompt('Enter section name:', section.name);\n    if (newName && newName !== section.name) {\n      updateSection(section._id, {\n        name: newName\n      });\n    }\n  };\n  const deleteSection = async sectionId => {\n    if (!window.confirm('Are you sure you want to delete this section?')) return;\n    try {\n      await axios.delete(`/api/market/config/sections/${sectionId}`);\n      await fetchMarketConfig();\n      await fetchStockData();\n    } catch (err) {\n      console.error('Error deleting section:', err);\n      setError('Failed to delete section');\n    }\n  };\n  const addStockToSection = async sectionId => {\n    const symbol = prompt('Enter stock symbol (e.g., AAPL):');\n    if (!symbol) return;\n    try {\n      await axios.post(`/api/market/config/sections/${sectionId}/symbols`, {\n        symbol: symbol.toUpperCase()\n      });\n      await fetchMarketConfig();\n      await fetchStockData();\n    } catch (err) {\n      console.error('Error adding stock to section:', err);\n      setError('Failed to add stock to section');\n    }\n  };\n  const addNewSection = async () => {\n    const name = prompt('Enter new section name:');\n    if (!name) return;\n    try {\n      await axios.post('/api/market/config/sections', {\n        name,\n        symbols: []\n      });\n      await fetchMarketConfig();\n    } catch (err) {\n      console.error('Error adding new section:', err);\n      setError('Failed to add new section');\n    }\n  };\n  const updateSection = async (sectionId, updates) => {\n    try {\n      await axios.put(`/api/market/config/sections/${sectionId}`, updates);\n      await fetchMarketConfig();\n      await fetchStockData();\n    } catch (err) {\n      console.error('Error updating section:', err);\n      setError('Failed to update section');\n    }\n  };\n  const renderContent = () => {\n    if (activeTab === 'market') {\n      if (loading && stocks.length === 0) {\n        return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchStockData,\n            className: \"retry-button\",\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"market-overview\",\n          children: [isEditingMarket && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-edit-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-config-btn\",\n              onClick: () => setIsEditingMarket(false),\n              children: \"\\u2713 Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-edit-btn\",\n              onClick: () => setIsEditingMarket(false),\n              children: \"\\u2715 Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), !isEditingMarket && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-controls\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-market-btn\",\n              onClick: () => setIsEditingMarket(true),\n              children: \"\\u2699\\uFE0F Customize Sections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), marketConfig && marketConfig.sections.filter(section => section.enabled).sort((a, b) => a.order - b.order).map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"section-title\",\n                children: section.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this), isEditingMarket && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-edit-controls\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-section-btn\",\n                  onClick: () => editSection(section),\n                  children: \"\\u270F\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-section-btn\",\n                  onClick: () => deleteSection(section._id),\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stocks-grid\",\n              children: [section.name === 'Currency' && usdIls && /*#__PURE__*/_jsxDEV(CurrencyCard, {\n                currency: usdIls\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 23\n              }, this), section.name === 'Bitcoin & Ethereum' && bitcoin && /*#__PURE__*/_jsxDEV(BitcoinCard, {\n                bitcoin: bitcoin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 23\n              }, this), section.symbols && stocks.filter(stock => section.symbols.includes(stock.symbol)).map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n                stock: stock\n              }, stock.symbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 25\n              }, this)), isEditingMarket && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"add-stock-card\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"add-stock-btn\",\n                  onClick: () => addStockToSection(section._id),\n                  children: \"+ Add Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this)]\n          }, section._id || section.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this)), isEditingMarket && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-section-area\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-section-btn\",\n              onClick: addNewSection,\n              children: \"+ Add New Section\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), stocks.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No stock data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchStockData,\n            className: \"retry-button\",\n            children: \"Load Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n\n    // Handle portfolio tab (includes both management and insights as sub-tabs)\n    return /*#__PURE__*/_jsxDEV(PortfolioPage, {\n      activeView: \"management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      lastUpdated: activeTab === 'market' ? lastUpdated : null,\n      onRefresh: activeTab === 'market' ? fetchStockData : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'market' ? 'active' : ''}`,\n        onClick: () => setActiveTab('market'),\n        children: \"Market Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'portfolio' ? 'active' : ''}`,\n        onClick: () => setActiveTab('portfolio'),\n        children: \"Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tqeCrHMu/uppT3FFMSfJaPTHk8s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","StockCard","CurrencyCard","BitcoinCard","LoadingSpinner","PortfolioPage","WatchlistsPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","activeTab","setActiveTab","stocks","setStocks","usdIls","setUsdIls","bitcoin","setBitcoin","loading","setLoading","error","setError","lastUpdated","setLastUpdated","marketConfig","setMarketConfig","isEditingMarket","setIsEditingMarket","fetchUsdIlsData","response","get","data","err","console","symbol","rate","previousRate","dailyChange","dailyChangePercent","timestamp","Date","toISOString","fetchBitcoinData","price","previousPrice","fetchMarketConfig","sections","name","symbols","enabled","fetchStockData","config","allSymbols","Set","filter","section","forEach","add","tickers","Array","from","stockResponse","Promise","all","join","snapshots","stockData","Object","entries","_data$latestTrade","_data$latestQuote","_data$latestQuote2","latestTrade","p","latestQuote","ap","bp","map","_data$latestTrade2","_data$latestQuote3","_data$latestQuote4","_data$dailyBar","_data$prevDailyBar","_data$dailyBar2","_data$dailyBar3","_data$dailyBar4","currentPrice","openPrice","dailyBar","o","prevClose","prevDailyBar","c","referencePrice","change","changePercent","volume","v","high","h","low","l","open","close","length","log","interval","setInterval","clearInterval","editSection","newName","prompt","updateSection","_id","deleteSection","sectionId","window","confirm","delete","addStockToSection","post","toUpperCase","addNewSection","updates","put","renderContent","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","sort","a","b","order","currency","stock","includes","activeView","onRefresh","_c","$RefreshReg$"],"sources":["/Users/orihalamit/Projects/dev/trading/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport StockCard from './components/StockCard';\nimport CurrencyCard from './components/CurrencyCard';\nimport BitcoinCard from './components/BitcoinCard';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport PortfolioPage from './components/Portfolio/PortfolioPage';\nimport WatchlistsPage from './components/Watchlists/WatchlistsPage';\nimport './App.css';\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState('portfolio'); // market, portfolio, watchlists\n  const [stocks, setStocks] = useState([]);\n  const [usdIls, setUsdIls] = useState(null);\n  const [bitcoin, setBitcoin] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [marketConfig, setMarketConfig] = useState(null);\n  const [isEditingMarket, setIsEditingMarket] = useState(false);\n\n  const fetchUsdIlsData = async () => {\n    try {\n      const response = await axios.get('/api/forex/usdils');\n      setUsdIls(response.data);\n    } catch (err) {\n      console.error('Error fetching USD/ILS data:', err);\n      setUsdIls({\n        symbol: 'USD/ILS',\n        rate: 0,\n        previousRate: 0,\n        dailyChange: 0,\n        dailyChangePercent: 0,\n        timestamp: new Date().toISOString(),\n        lastUpdated: 'N/A',\n        error: 'Failed to fetch rate'\n      });\n    }\n  };\n\n  const fetchBitcoinData = async () => {\n    try {\n      const response = await axios.get('/api/crypto/bitcoin');\n      setBitcoin(response.data);\n    } catch (err) {\n      console.error('Error fetching Bitcoin data:', err);\n      setBitcoin({\n        symbol: 'BTC/USD',\n        price: 0,\n        previousPrice: 0,\n        dailyChange: 0,\n        dailyChangePercent: 0,\n        timestamp: new Date().toISOString(),\n        error: 'Failed to fetch Bitcoin price'\n      });\n    }\n  };\n\n  const fetchMarketConfig = async () => {\n    try {\n      const response = await axios.get('/api/market/config');\n      setMarketConfig(response.data);\n      return response.data;\n    } catch (err) {\n      console.error('Error fetching market config:', err);\n      // Return default config if API fails\n      return {\n        sections: [\n          { name: 'Currency', symbols: [], enabled: true },\n          { name: 'Major Indices & ETFs', symbols: ['SPY', 'QQQ', 'IWM', 'RSP', 'MAGS'], enabled: true },\n          { name: 'Volatility ETFs', symbols: ['VXX', 'UVXY', 'SVXY'], enabled: true },\n          { name: 'Individual Stocks', symbols: ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', 'NVDA', 'META', 'PLTR', 'HIMS'], enabled: true },\n          { name: 'Bitcoin & Ethereum', symbols: ['IBIT', 'ETHE', 'ETHW'], enabled: true }\n        ]\n      };\n    }\n  };\n\n  const fetchStockData = async () => {\n    try {\n      setLoading(true);\n      \n      // Get market configuration\n      const config = marketConfig || await fetchMarketConfig();\n      \n      // Collect all symbols from enabled sections\n      const allSymbols = new Set();\n      config.sections\n        .filter(section => section.enabled && section.name !== 'Currency' && section.name !== 'Bitcoin & Ethereum')\n        .forEach(section => {\n          section.symbols.forEach(symbol => allSymbols.add(symbol));\n        });\n      \n      const tickers = Array.from(allSymbols);\n      \n      // Fetch stock data, USD/ILS data, and Bitcoin data in parallel\n      const [stockResponse] = await Promise.all([\n        axios.get(`/api/stocks/snapshots?symbols=${tickers.join(',')}`),\n        fetchUsdIlsData(),\n        fetchBitcoinData()\n      ]);\n      \n      if (stockResponse.data && stockResponse.data.snapshots) {\n        const stockData = Object.entries(stockResponse.data.snapshots)\n          .filter(([symbol, data]) => {\n            // Filter out symbols with no data\n            return data && (data.latestTrade?.p || data.latestQuote?.ap || data.latestQuote?.bp);\n          })\n          .map(([symbol, data]) => {\n            // Use latestTrade price if available, otherwise use latestQuote ask/bid\n            const currentPrice = data.latestTrade?.p || data.latestQuote?.ap || data.latestQuote?.bp || 0;\n            const openPrice = data.dailyBar?.o || 0;\n            const prevClose = data.prevDailyBar?.c || 0;\n            \n            // Calculate change from previous close if available, otherwise from open\n            const referencePrice = prevClose || openPrice;\n            const change = referencePrice ? (currentPrice - referencePrice) : 0;\n            const changePercent = referencePrice ? ((change / referencePrice) * 100) : 0;\n            \n            return {\n              symbol,\n              price: currentPrice,\n              change,\n              changePercent,\n              volume: data.dailyBar?.v || 0,\n              high: data.dailyBar?.h || 0,\n              low: data.dailyBar?.l || 0,\n              open: openPrice,\n              close: prevClose\n            };\n          });\n        \n        setStocks(stockData);\n        setLastUpdated(new Date());\n        \n        // Show info message if some symbols were filtered out\n        if (stockData.length < tickers.length) {\n          console.log(`Note: ${tickers.length - stockData.length} symbols were not available or had no data`);\n          console.log('Note: VIX, TA35, and TA125 are not supported by Alpaca API. Using VXX, UVXY, SVXY as VIX alternatives.');\n        }\n        \n        setError(null);\n      } else {\n        setError('No market data available. Please check your API configuration.');\n      }\n    } catch (err) {\n      console.error('Error fetching stock data:', err);\n      setError('Failed to fetch stock data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (activeTab === 'market') {\n      fetchStockData();\n      \n      // Auto-refresh every 30 seconds only when market tab is active\n      const interval = setInterval(fetchStockData, 30000);\n      \n      return () => clearInterval(interval);\n    }\n  }, [activeTab]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Market configuration editing functions\n  const editSection = (section) => {\n    const newName = prompt('Enter section name:', section.name);\n    if (newName && newName !== section.name) {\n      updateSection(section._id, { name: newName });\n    }\n  };\n\n  const deleteSection = async (sectionId) => {\n    if (!window.confirm('Are you sure you want to delete this section?')) return;\n    \n    try {\n      await axios.delete(`/api/market/config/sections/${sectionId}`);\n      await fetchMarketConfig();\n      await fetchStockData();\n    } catch (err) {\n      console.error('Error deleting section:', err);\n      setError('Failed to delete section');\n    }\n  };\n\n  const addStockToSection = async (sectionId) => {\n    const symbol = prompt('Enter stock symbol (e.g., AAPL):');\n    if (!symbol) return;\n    \n    try {\n      await axios.post(`/api/market/config/sections/${sectionId}/symbols`, { symbol: symbol.toUpperCase() });\n      await fetchMarketConfig();\n      await fetchStockData();\n    } catch (err) {\n      console.error('Error adding stock to section:', err);\n      setError('Failed to add stock to section');\n    }\n  };\n\n  const addNewSection = async () => {\n    const name = prompt('Enter new section name:');\n    if (!name) return;\n    \n    try {\n      await axios.post('/api/market/config/sections', { name, symbols: [] });\n      await fetchMarketConfig();\n    } catch (err) {\n      console.error('Error adding new section:', err);\n      setError('Failed to add new section');\n    }\n  };\n\n  const updateSection = async (sectionId, updates) => {\n    try {\n      await axios.put(`/api/market/config/sections/${sectionId}`, updates);\n      await fetchMarketConfig();\n      await fetchStockData();\n    } catch (err) {\n      console.error('Error updating section:', err);\n      setError('Failed to update section');\n    }\n  };\n\n  const renderContent = () => {\n    if (activeTab === 'market') {\n      if (loading && stocks.length === 0) {\n        return <LoadingSpinner />;\n      }\n      \n      return (\n        <>\n          {error && (\n            <div className=\"error-message\">\n              {error}\n              <button onClick={fetchStockData} className=\"retry-button\">\n                Retry\n              </button>\n            </div>\n          )}\n          \n          <div className=\"market-overview\">\n            {isEditingMarket && (\n              <div className=\"market-edit-controls\">\n                <button \n                  className=\"save-config-btn\"\n                  onClick={() => setIsEditingMarket(false)}\n                >\n                  ✓ Save Changes\n                </button>\n                <button \n                  className=\"cancel-edit-btn\"\n                  onClick={() => setIsEditingMarket(false)}\n                >\n                  ✕ Cancel\n                </button>\n              </div>\n            )}\n            \n            {!isEditingMarket && (\n              <div className=\"market-controls\">\n                <button \n                  className=\"edit-market-btn\"\n                  onClick={() => setIsEditingMarket(true)}\n                >\n                  ⚙️ Customize Sections\n                </button>\n              </div>\n            )}\n            \n            {marketConfig && marketConfig.sections\n              .filter(section => section.enabled)\n              .sort((a, b) => a.order - b.order)\n              .map((section) => (\n                <div key={section._id || section.name} className=\"market-section\">\n                  <div className=\"section-header\">\n                    <h2 className=\"section-title\">{section.name}</h2>\n                    {isEditingMarket && (\n                      <div className=\"section-edit-controls\">\n                        <button \n                          className=\"edit-section-btn\"\n                          onClick={() => editSection(section)}\n                        >\n                          ✏️\n                        </button>\n                        <button \n                          className=\"delete-section-btn\"\n                          onClick={() => deleteSection(section._id)}\n                        >\n                          🗑️\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                  \n                  <div className=\"stocks-grid\">\n                    {section.name === 'Currency' && usdIls && (\n                      <CurrencyCard currency={usdIls} />\n                    )}\n                    \n                    {section.name === 'Bitcoin & Ethereum' && bitcoin && (\n                      <BitcoinCard bitcoin={bitcoin} />\n                    )}\n                    \n                    {section.symbols && stocks\n                      .filter(stock => section.symbols.includes(stock.symbol))\n                      .map((stock) => (\n                        <StockCard key={stock.symbol} stock={stock} />\n                      ))}\n                    \n                    {isEditingMarket && (\n                      <div className=\"add-stock-card\">\n                        <button \n                          className=\"add-stock-btn\"\n                          onClick={() => addStockToSection(section._id)}\n                        >\n                          + Add Stock\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            \n            {isEditingMarket && (\n              <div className=\"add-section-area\">\n                <button \n                  className=\"add-section-btn\"\n                  onClick={addNewSection}\n                >\n                  + Add New Section\n                </button>\n              </div>\n            )}\n          </div>\n          \n          {stocks.length === 0 && !loading && (\n            <div className=\"no-data\">\n              <p>No stock data available.</p>\n              <button onClick={fetchStockData} className=\"retry-button\">\n                Load Data\n              </button>\n            </div>\n          )}\n        </>\n      );\n    }\n\n    // Handle portfolio tab (includes both management and insights as sub-tabs)\n    return <PortfolioPage activeView=\"management\" />;\n  };\n\n  return (\n    <div className=\"app\">\n      <Header \n        lastUpdated={activeTab === 'market' ? lastUpdated : null}\n        onRefresh={activeTab === 'market' ? fetchStockData : null}\n      />\n\n      <div className=\"tabs\">\n        <button\n          className={`tab-button ${activeTab === 'market' ? 'active' : ''}`}\n          onClick={() => setActiveTab('market')}\n        >\n          Market Overview\n        </button>\n        <button\n          className={`tab-button ${activeTab === 'portfolio' ? 'active' : ''}`}\n          onClick={() => setActiveTab('portfolio')}\n        >\n          Portfolio\n        </button>\n      </div>\n\n      <div className=\"content\">\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}