{"ast":null,"code":"var _jsxFileName = \"/Users/orihalamit/Projects/dev/trading/frontend/src/components/Portfolio/PortfolioPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './PortfolioPage.css';\nimport PortfolioSummary from './PortfolioSummary';\nimport PositionsList from './PositionsList';\nimport AddPositionForm from './AddPositionForm';\nimport TransactionHistory from './TransactionHistory';\nimport ImportCSV from './ImportCSV';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PortfolioPage = () => {\n  _s();\n  const [portfolios, setPortfolios] = useState([]);\n  const [selectedPortfolio, setSelectedPortfolio] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchPortfolios();\n  }, []);\n  const fetchPortfolios = async () => {\n    try {\n      // First get the list of portfolios\n      const response = await axios.get('/api/portfolio');\n      const portfoliosList = response.data;\n      if (portfoliosList.length > 0) {\n        // Try to restore last selected portfolio from localStorage\n        const lastSelectedId = localStorage.getItem('lastSelectedPortfolioId');\n        let portfolioToSelect = portfoliosList.find(p => p._id === lastSelectedId);\n\n        // If last selected doesn't exist, use current selected or first one\n        if (!portfolioToSelect) {\n          portfolioToSelect = portfoliosList.find(p => p._id === (selectedPortfolio === null || selectedPortfolio === void 0 ? void 0 : selectedPortfolio._id)) || portfoliosList[0];\n        }\n        const detailedResponse = await axios.get(`/api/portfolio/${portfolioToSelect._id}`);\n        const updatedPortfolio = detailedResponse.data;\n\n        // Update the portfolio in the list with the detailed data\n        const updatedPortfolios = portfoliosList.map(p => p._id === updatedPortfolio._id ? updatedPortfolio : p);\n        setPortfolios(updatedPortfolios);\n        setSelectedPortfolio(updatedPortfolio);\n\n        // Save to localStorage\n        localStorage.setItem('lastSelectedPortfolioId', updatedPortfolio._id);\n      } else {\n        setPortfolios(portfoliosList);\n        setSelectedPortfolio(null);\n        localStorage.removeItem('lastSelectedPortfolioId');\n      }\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch portfolios');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createPortfolio = async name => {\n    try {\n      const response = await axios.post('/api/portfolio', {\n        name\n      });\n      const newPortfolio = response.data;\n      setPortfolios([...portfolios, newPortfolio]);\n      setSelectedPortfolio(newPortfolio);\n      localStorage.setItem('lastSelectedPortfolioId', newPortfolio._id);\n      setError(null);\n    } catch (err) {\n      setError('Failed to create portfolio');\n      console.error(err);\n    }\n  };\n  const deletePortfolio = async portfolioId => {\n    if (!window.confirm('Are you sure you want to delete this portfolio? This action cannot be undone.')) {\n      return;\n    }\n    try {\n      await axios.delete(`/api/portfolio/${portfolioId}`);\n      const updatedPortfolios = portfolios.filter(p => p._id !== portfolioId);\n      setPortfolios(updatedPortfolios);\n\n      // If we deleted the selected portfolio, select another one\n      if ((selectedPortfolio === null || selectedPortfolio === void 0 ? void 0 : selectedPortfolio._id) === portfolioId) {\n        if (updatedPortfolios.length > 0) {\n          const newSelected = updatedPortfolios[0];\n          setSelectedPortfolio(newSelected);\n          localStorage.setItem('lastSelectedPortfolioId', newSelected._id);\n        } else {\n          setSelectedPortfolio(null);\n          localStorage.removeItem('lastSelectedPortfolioId');\n        }\n      }\n      setError(null);\n    } catch (err) {\n      setError('Failed to delete portfolio');\n      console.error(err);\n    }\n  };\n  const handleAddPosition = async position => {\n    try {\n      const response = await axios.post(`/api/portfolio/${selectedPortfolio._id}/positions`, position);\n      await fetchPortfolios(); // Refresh all portfolios with latest data\n      setError(null);\n    } catch (err) {\n      setError('Failed to add position');\n      console.error(err);\n    }\n  };\n  const handleImportCSV = async file => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      await axios.post(`/api/portfolio/${selectedPortfolio._id}/import`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      await fetchPortfolios(); // Refresh all portfolios with latest data\n      setError(null);\n    } catch (err) {\n      setError('Failed to import positions');\n      console.error(err);\n    }\n  };\n  const handlePortfolioChange = async portfolioId => {\n    try {\n      const response = await axios.get(`/api/portfolio/${portfolioId}`);\n      const portfolio = response.data;\n      setSelectedPortfolio(portfolio);\n      setPortfolios(portfolios.map(p => p._id === portfolio._id ? portfolio : p));\n      localStorage.setItem('lastSelectedPortfolioId', portfolioId);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch portfolio details');\n      console.error(err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading portfolios...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Portfolio Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"portfolio-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: (selectedPortfolio === null || selectedPortfolio === void 0 ? void 0 : selectedPortfolio._id) || '',\n          onChange: e => handlePortfolioChange(e.target.value),\n          children: portfolios.map(portfolio => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: portfolio._id,\n            children: portfolio.name\n          }, portfolio._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-portfolio-btn\",\n          onClick: () => {\n            const name = prompt('Enter portfolio name:');\n            if (name) createPortfolio(name);\n          },\n          children: \"New Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), selectedPortfolio && portfolios.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-portfolio-btn\",\n          onClick: () => deletePortfolio(selectedPortfolio._id),\n          title: \"Delete Portfolio\",\n          children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this), selectedPortfolio ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PortfolioSummary, {\n        portfolio: selectedPortfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"portfolio-actions\",\n        children: [/*#__PURE__*/_jsxDEV(AddPositionForm, {\n          onSubmit: handleAddPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImportCSV, {\n          onImport: handleImportCSV\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PositionsList, {\n        positions: selectedPortfolio.positions,\n        portfolioId: selectedPortfolio._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TransactionHistory, {\n        portfolioId: selectedPortfolio._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-portfolio\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No portfolios found. Create a new portfolio to get started.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const name = prompt('Enter portfolio name:');\n          if (name) createPortfolio(name);\n        },\n        children: \"Create Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioPage, \"DhsQN/ytRw7FMWbPzb8BnE/56a8=\");\n_c = PortfolioPage;\nexport default PortfolioPage;\nvar _c;\n$RefreshReg$(_c, \"PortfolioPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","PortfolioSummary","PositionsList","AddPositionForm","TransactionHistory","ImportCSV","jsxDEV","_jsxDEV","Fragment","_Fragment","PortfolioPage","_s","portfolios","setPortfolios","selectedPortfolio","setSelectedPortfolio","loading","setLoading","error","setError","fetchPortfolios","response","get","portfoliosList","data","length","lastSelectedId","localStorage","getItem","portfolioToSelect","find","p","_id","detailedResponse","updatedPortfolio","updatedPortfolios","map","setItem","removeItem","err","console","createPortfolio","name","post","newPortfolio","deletePortfolio","portfolioId","window","confirm","delete","filter","newSelected","handleAddPosition","position","handleImportCSV","file","formData","FormData","append","headers","handlePortfolioChange","portfolio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","prompt","title","onSubmit","onImport","positions","_c","$RefreshReg$"],"sources":["/Users/orihalamit/Projects/dev/trading/frontend/src/components/Portfolio/PortfolioPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './PortfolioPage.css';\nimport PortfolioSummary from './PortfolioSummary';\nimport PositionsList from './PositionsList';\nimport AddPositionForm from './AddPositionForm';\nimport TransactionHistory from './TransactionHistory';\nimport ImportCSV from './ImportCSV';\n\nconst PortfolioPage = () => {\n  const [portfolios, setPortfolios] = useState([]);\n  const [selectedPortfolio, setSelectedPortfolio] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchPortfolios();\n  }, []);\n\n  const fetchPortfolios = async () => {\n    try {\n      // First get the list of portfolios\n      const response = await axios.get('/api/portfolio');\n      const portfoliosList = response.data;\n\n      if (portfoliosList.length > 0) {\n        // Try to restore last selected portfolio from localStorage\n        const lastSelectedId = localStorage.getItem('lastSelectedPortfolioId');\n        let portfolioToSelect = portfoliosList.find(p => p._id === lastSelectedId);\n        \n        // If last selected doesn't exist, use current selected or first one\n        if (!portfolioToSelect) {\n          portfolioToSelect = portfoliosList.find(p => p._id === selectedPortfolio?._id) || portfoliosList[0];\n        }\n\n        const detailedResponse = await axios.get(`/api/portfolio/${portfolioToSelect._id}`);\n        const updatedPortfolio = detailedResponse.data;\n\n        // Update the portfolio in the list with the detailed data\n        const updatedPortfolios = portfoliosList.map(p => \n          p._id === updatedPortfolio._id ? updatedPortfolio : p\n        );\n\n        setPortfolios(updatedPortfolios);\n        setSelectedPortfolio(updatedPortfolio);\n        \n        // Save to localStorage\n        localStorage.setItem('lastSelectedPortfolioId', updatedPortfolio._id);\n      } else {\n        setPortfolios(portfoliosList);\n        setSelectedPortfolio(null);\n        localStorage.removeItem('lastSelectedPortfolioId');\n      }\n      \n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch portfolios');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createPortfolio = async (name) => {\n    try {\n      const response = await axios.post('/api/portfolio', { name });\n      const newPortfolio = response.data;\n      setPortfolios([...portfolios, newPortfolio]);\n      setSelectedPortfolio(newPortfolio);\n      localStorage.setItem('lastSelectedPortfolioId', newPortfolio._id);\n      setError(null);\n    } catch (err) {\n      setError('Failed to create portfolio');\n      console.error(err);\n    }\n  };\n\n  const deletePortfolio = async (portfolioId) => {\n    if (!window.confirm('Are you sure you want to delete this portfolio? This action cannot be undone.')) {\n      return;\n    }\n\n    try {\n      await axios.delete(`/api/portfolio/${portfolioId}`);\n      \n      const updatedPortfolios = portfolios.filter(p => p._id !== portfolioId);\n      setPortfolios(updatedPortfolios);\n      \n      // If we deleted the selected portfolio, select another one\n      if (selectedPortfolio?._id === portfolioId) {\n        if (updatedPortfolios.length > 0) {\n          const newSelected = updatedPortfolios[0];\n          setSelectedPortfolio(newSelected);\n          localStorage.setItem('lastSelectedPortfolioId', newSelected._id);\n        } else {\n          setSelectedPortfolio(null);\n          localStorage.removeItem('lastSelectedPortfolioId');\n        }\n      }\n      \n      setError(null);\n    } catch (err) {\n      setError('Failed to delete portfolio');\n      console.error(err);\n    }\n  };\n\n  const handleAddPosition = async (position) => {\n    try {\n      const response = await axios.post(\n        `/api/portfolio/${selectedPortfolio._id}/positions`,\n        position\n      );\n      await fetchPortfolios(); // Refresh all portfolios with latest data\n      setError(null);\n    } catch (err) {\n      setError('Failed to add position');\n      console.error(err);\n    }\n  };\n\n  const handleImportCSV = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      \n      await axios.post(\n        `/api/portfolio/${selectedPortfolio._id}/import`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      );\n      \n      await fetchPortfolios(); // Refresh all portfolios with latest data\n      setError(null);\n    } catch (err) {\n      setError('Failed to import positions');\n      console.error(err);\n    }\n  };\n\n  const handlePortfolioChange = async (portfolioId) => {\n    try {\n      const response = await axios.get(`/api/portfolio/${portfolioId}`);\n      const portfolio = response.data;\n      setSelectedPortfolio(portfolio);\n      setPortfolios(portfolios.map(p => \n        p._id === portfolio._id ? portfolio : p\n      ));\n      localStorage.setItem('lastSelectedPortfolioId', portfolioId);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch portfolio details');\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading portfolios...</div>;\n  }\n\n  return (\n    <div className=\"portfolio-page\">\n      <div className=\"portfolio-header\">\n        <h1>Portfolio Management</h1>\n        <div className=\"portfolio-selector\">\n          <select\n            value={selectedPortfolio?._id || ''}\n            onChange={(e) => handlePortfolioChange(e.target.value)}\n          >\n            {portfolios.map(portfolio => (\n              <option key={portfolio._id} value={portfolio._id}>\n                {portfolio.name}\n              </option>\n            ))}\n          </select>\n          <button\n            className=\"new-portfolio-btn\"\n            onClick={() => {\n              const name = prompt('Enter portfolio name:');\n              if (name) createPortfolio(name);\n            }}\n          >\n            New Portfolio\n          </button>\n          {selectedPortfolio && portfolios.length > 1 && (\n            <button\n              className=\"delete-portfolio-btn\"\n              onClick={() => deletePortfolio(selectedPortfolio._id)}\n              title=\"Delete Portfolio\"\n            >\n              🗑️ Delete\n            </button>\n          )}\n        </div>\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {selectedPortfolio ? (\n        <>\n          <PortfolioSummary portfolio={selectedPortfolio} />\n          \n          <div className=\"portfolio-actions\">\n            <AddPositionForm onSubmit={handleAddPosition} />\n            <ImportCSV onImport={handleImportCSV} />\n          </div>\n\n          <PositionsList\n            positions={selectedPortfolio.positions}\n            portfolioId={selectedPortfolio._id}\n          />\n\n          <TransactionHistory portfolioId={selectedPortfolio._id} />\n        </>\n      ) : (\n        <div className=\"no-portfolio\">\n          <p>No portfolios found. Create a new portfolio to get started.</p>\n          <button\n            onClick={() => {\n              const name = prompt('Enter portfolio name:');\n              if (name) createPortfolio(name);\n            }}\n          >\n            Create Portfolio\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PortfolioPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}