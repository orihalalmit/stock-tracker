{"ast":null,"code":"var _jsxFileName = \"/Users/orihalamit/Projects/dev/trading/frontend/src/components/Portfolio/PortfolioSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './PortfolioSummary.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioSummary = ({\n  portfolio\n}) => {\n  _s();\n  const [summary, setSummary] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchSummary();\n    const interval = setInterval(fetchSummary, 30000); // Update every 30 seconds\n    return () => clearInterval(interval);\n  }, [portfolio._id]);\n  const fetchSummary = async () => {\n    try {\n      const response = await axios.get(`/api/portfolio/${portfolio._id}`);\n      setSummary(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch portfolio summary');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  };\n  const formatPercent = value => {\n    return (value >= 0 ? '+' : '') + value.toFixed(2) + '%';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-summary loading\",\n      children: \"Loading summary...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-summary error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  const totalValue = summary.currentValue;\n  const totalGainLoss = summary.totalGainLoss;\n  const gainLossPercent = totalGainLoss / (totalValue - totalGainLoss) * 100;\n  const isPositive = totalGainLoss >= 0;\n\n  // Group positions by sector\n  const sectorBreakdown = summary.positions.reduce((acc, position) => {\n    const sector = position.sector || 'Unknown';\n    if (!acc[sector]) {\n      acc[sector] = 0;\n    }\n    acc[sector] += position.shares * position.averagePrice;\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio-summary\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: portfolio.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"last-updated\",\n        children: [\"Last updated: \", new Date(summary.lastUpdated).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card total-value\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value\",\n          children: formatCurrency(totalValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `change ${isPositive ? 'positive' : 'negative'}`,\n          children: [formatCurrency(totalGainLoss), \" (\", formatPercent(gainLossPercent), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card cash-balance\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cash Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value\",\n          children: formatCurrency(summary.cash)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"percent\",\n          children: [formatPercent(summary.cash / totalValue * 100), \" of portfolio\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card positions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Positions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value\",\n          children: summary.positions.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"percent\",\n          children: [formatPercent((totalValue - summary.cash) / totalValue * 100), \" invested\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sector-breakdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sector Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sector-grid\",\n        children: Object.entries(sectorBreakdown).map(([sector, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sector-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sector-name\",\n            children: sector\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sector-value\",\n            children: formatCurrency(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sector-percent\",\n            children: formatPercent(value / (totalValue - summary.cash) * 100)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, sector, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-positions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Top Positions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"positions-grid\",\n        children: summary.positions.sort((a, b) => b.shares * b.averagePrice - a.shares * a.averagePrice).slice(0, 5).map(position => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"position-symbol\",\n            children: position.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"position-value\",\n            children: formatCurrency(position.shares * position.averagePrice)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"position-percent\",\n            children: formatPercent(position.shares * position.averagePrice / (totalValue - summary.cash) * 100)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, position.symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioSummary, \"4NsVumfooczdqcrhY0LObVQdVQw=\");\n_c = PortfolioSummary;\nexport default PortfolioSummary;\nvar _c;\n$RefreshReg$(_c, \"PortfolioSummary\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PortfolioSummary","portfolio","_s","summary","setSummary","loading","setLoading","error","setError","fetchSummary","interval","setInterval","clearInterval","_id","response","get","data","err","console","formatCurrency","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalValue","currentValue","totalGainLoss","gainLossPercent","isPositive","sectorBreakdown","positions","reduce","acc","position","sector","shares","averagePrice","name","Date","lastUpdated","toLocaleString","cash","length","Object","entries","map","sort","a","b","slice","symbol","_c","$RefreshReg$"],"sources":["/Users/orihalamit/Projects/dev/trading/frontend/src/components/Portfolio/PortfolioSummary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './PortfolioSummary.css';\n\nconst PortfolioSummary = ({ portfolio }) => {\n  const [summary, setSummary] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchSummary();\n    const interval = setInterval(fetchSummary, 30000); // Update every 30 seconds\n    return () => clearInterval(interval);\n  }, [portfolio._id]);\n\n  const fetchSummary = async () => {\n    try {\n      const response = await axios.get(`/api/portfolio/${portfolio._id}`);\n      setSummary(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch portfolio summary');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  };\n\n  const formatPercent = (value) => {\n    return (value >= 0 ? '+' : '') + value.toFixed(2) + '%';\n  };\n\n  if (loading) {\n    return <div className=\"portfolio-summary loading\">Loading summary...</div>;\n  }\n\n  if (error) {\n    return <div className=\"portfolio-summary error\">{error}</div>;\n  }\n\n  const totalValue = summary.currentValue;\n  const totalGainLoss = summary.totalGainLoss;\n  const gainLossPercent = (totalGainLoss / (totalValue - totalGainLoss)) * 100;\n  const isPositive = totalGainLoss >= 0;\n\n  // Group positions by sector\n  const sectorBreakdown = summary.positions.reduce((acc, position) => {\n    const sector = position.sector || 'Unknown';\n    if (!acc[sector]) {\n      acc[sector] = 0;\n    }\n    acc[sector] += position.shares * position.averagePrice;\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"portfolio-summary\">\n      <div className=\"summary-header\">\n        <h2>{portfolio.name}</h2>\n        <p className=\"last-updated\">\n          Last updated: {new Date(summary.lastUpdated).toLocaleString()}\n        </p>\n      </div>\n\n      <div className=\"summary-grid\">\n        <div className=\"summary-card total-value\">\n          <h3>Total Value</h3>\n          <div className=\"value\">{formatCurrency(totalValue)}</div>\n          <div className={`change ${isPositive ? 'positive' : 'negative'}`}>\n            {formatCurrency(totalGainLoss)} ({formatPercent(gainLossPercent)})\n          </div>\n        </div>\n\n        <div className=\"summary-card cash-balance\">\n          <h3>Cash Balance</h3>\n          <div className=\"value\">{formatCurrency(summary.cash)}</div>\n          <div className=\"percent\">\n            {formatPercent((summary.cash / totalValue) * 100)} of portfolio\n          </div>\n        </div>\n\n        <div className=\"summary-card positions\">\n          <h3>Positions</h3>\n          <div className=\"value\">{summary.positions.length}</div>\n          <div className=\"percent\">\n            {formatPercent(((totalValue - summary.cash) / totalValue) * 100)} invested\n          </div>\n        </div>\n      </div>\n\n      <div className=\"sector-breakdown\">\n        <h3>Sector Breakdown</h3>\n        <div className=\"sector-grid\">\n          {Object.entries(sectorBreakdown).map(([sector, value]) => (\n            <div key={sector} className=\"sector-card\">\n              <div className=\"sector-name\">{sector}</div>\n              <div className=\"sector-value\">{formatCurrency(value)}</div>\n              <div className=\"sector-percent\">\n                {formatPercent((value / (totalValue - summary.cash)) * 100)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"top-positions\">\n        <h3>Top Positions</h3>\n        <div className=\"positions-grid\">\n          {summary.positions\n            .sort((a, b) => (b.shares * b.averagePrice) - (a.shares * a.averagePrice))\n            .slice(0, 5)\n            .map(position => (\n              <div key={position.symbol} className=\"position-card\">\n                <div className=\"position-symbol\">{position.symbol}</div>\n                <div className=\"position-value\">\n                  {formatCurrency(position.shares * position.averagePrice)}\n                </div>\n                <div className=\"position-percent\">\n                  {formatPercent((position.shares * position.averagePrice) / (totalValue - summary.cash) * 100)}\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioSummary; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}