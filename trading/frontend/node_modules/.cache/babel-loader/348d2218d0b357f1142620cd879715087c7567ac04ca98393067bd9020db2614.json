{"ast":null,"code":"var _jsxFileName = \"/Users/orihalamit/Projects/dev/trading/frontend/src/components/TestButton.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestButton = () => {\n  const testAddStock = async () => {\n    try {\n      console.log('üß™ Testing add stock API...');\n\n      // First get the current config\n      const configResponse = await axios.get('/api/market/config');\n      console.log('Current config:', configResponse.data);\n\n      // Find the Individual Stocks section\n      const individualStocksSection = configResponse.data.sections.find(section => section.name === 'Individual Stocks');\n      if (!individualStocksSection) {\n        console.error('Individual Stocks section not found!');\n        return;\n      }\n      console.log('Individual Stocks section ID:', individualStocksSection._id);\n      console.log('Current symbols:', individualStocksSection.symbols);\n\n      // Try to add a test stock\n      const testSymbol = 'TEST' + Math.floor(Math.random() * 1000);\n      console.log('Adding test symbol:', testSymbol);\n      const addResponse = await axios.post(`/api/market/config/sections/${individualStocksSection._id}/symbols`, {\n        symbol: testSymbol\n      });\n      console.log('‚úÖ Add stock successful!', addResponse.data);\n      alert(`Successfully added ${testSymbol}! Check console for details.`);\n    } catch (error) {\n      console.error('‚ùå Test failed:', error);\n      alert('Test failed! Check console for details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: '10px',\n      right: '10px',\n      zIndex: 9999,\n      background: '#007bff',\n      color: 'white',\n      padding: '10px',\n      borderRadius: '5px',\n      cursor: 'pointer'\n    },\n    onClick: testAddStock,\n    children: \"\\uD83E\\uDDEA Test Add Stock API\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = TestButton;\nexport default TestButton;\nvar _c;\n$RefreshReg$(_c, \"TestButton\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","TestButton","testAddStock","console","log","configResponse","get","data","individualStocksSection","sections","find","section","name","error","_id","symbols","testSymbol","Math","floor","random","addResponse","post","symbol","alert","style","position","top","right","zIndex","background","color","padding","borderRadius","cursor","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/orihalamit/Projects/dev/trading/frontend/src/components/TestButton.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst TestButton = () => {\n  const testAddStock = async () => {\n    try {\n      console.log('üß™ Testing add stock API...');\n      \n      // First get the current config\n      const configResponse = await axios.get('/api/market/config');\n      console.log('Current config:', configResponse.data);\n      \n      // Find the Individual Stocks section\n      const individualStocksSection = configResponse.data.sections.find(\n        section => section.name === 'Individual Stocks'\n      );\n      \n      if (!individualStocksSection) {\n        console.error('Individual Stocks section not found!');\n        return;\n      }\n      \n      console.log('Individual Stocks section ID:', individualStocksSection._id);\n      console.log('Current symbols:', individualStocksSection.symbols);\n      \n      // Try to add a test stock\n      const testSymbol = 'TEST' + Math.floor(Math.random() * 1000);\n      console.log('Adding test symbol:', testSymbol);\n      \n      const addResponse = await axios.post(\n        `/api/market/config/sections/${individualStocksSection._id}/symbols`,\n        { symbol: testSymbol }\n      );\n      \n      console.log('‚úÖ Add stock successful!', addResponse.data);\n      alert(`Successfully added ${testSymbol}! Check console for details.`);\n      \n    } catch (error) {\n      console.error('‚ùå Test failed:', error);\n      alert('Test failed! Check console for details.');\n    }\n  };\n\n  return (\n    <div style={{ \n      position: 'fixed', \n      top: '10px', \n      right: '10px', \n      zIndex: 9999,\n      background: '#007bff',\n      color: 'white',\n      padding: '10px',\n      borderRadius: '5px',\n      cursor: 'pointer'\n    }} onClick={testAddStock}>\n      üß™ Test Add Stock API\n    </div>\n  );\n};\n\nexport default TestButton; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;;MAE1C;MACA,MAAMC,cAAc,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,oBAAoB,CAAC;MAC5DH,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,cAAc,CAACE,IAAI,CAAC;;MAEnD;MACA,MAAMC,uBAAuB,GAAGH,cAAc,CAACE,IAAI,CAACE,QAAQ,CAACC,IAAI,CAC/DC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAK,mBAC9B,CAAC;MAED,IAAI,CAACJ,uBAAuB,EAAE;QAC5BL,OAAO,CAACU,KAAK,CAAC,sCAAsC,CAAC;QACrD;MACF;MAEAV,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEI,uBAAuB,CAACM,GAAG,CAAC;MACzEX,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,uBAAuB,CAACO,OAAO,CAAC;;MAEhE;MACA,MAAMC,UAAU,GAAG,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;MAC5DhB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEY,UAAU,CAAC;MAE9C,MAAMI,WAAW,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAClC,+BAA+Bb,uBAAuB,CAACM,GAAG,UAAU,EACpE;QAAEQ,MAAM,EAAEN;MAAW,CACvB,CAAC;MAEDb,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEgB,WAAW,CAACb,IAAI,CAAC;MACxDgB,KAAK,CAAC,sBAAsBP,UAAU,8BAA8B,CAAC;IAEvE,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCU,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKwB,KAAK,EAAE;MACVC,QAAQ,EAAE,OAAO;MACjBC,GAAG,EAAE,MAAM;MACXC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,IAAI;MACZC,UAAU,EAAE,SAAS;MACrBC,KAAK,EAAE,OAAO;MACdC,OAAO,EAAE,MAAM;MACfC,YAAY,EAAE,KAAK;MACnBC,MAAM,EAAE;IACV,CAAE;IAACC,OAAO,EAAEhC,YAAa;IAAAiC,QAAA,EAAC;EAE1B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAACC,EAAA,GAvDIvC,UAAU;AAyDhB,eAAeA,UAAU;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}