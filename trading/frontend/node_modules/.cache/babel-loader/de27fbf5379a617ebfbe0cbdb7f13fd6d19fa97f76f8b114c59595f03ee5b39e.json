{"ast":null,"code":"var _jsxFileName = \"/Users/orihalamit/Projects/dev/trading/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport StockCard from './components/StockCard';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport PortfolioPage from './components/Portfolio/PortfolioPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeTab, setActiveTab] = useState('market'); // market, portfolio\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const fetchStockData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/stocks/snapshots');\n      if (response.data && response.data.snapshots) {\n        const stockData = Object.entries(response.data.snapshots).map(([symbol, data]) => {\n          var _data$latestTrade, _data$latestQuote, _data$latestQuote2, _data$dailyBar, _data$prevDailyBar, _data$dailyBar2, _data$dailyBar3, _data$dailyBar4;\n          // Use latestTrade price if available, otherwise use latestQuote ask/bid\n          const currentPrice = ((_data$latestTrade = data.latestTrade) === null || _data$latestTrade === void 0 ? void 0 : _data$latestTrade.p) || ((_data$latestQuote = data.latestQuote) === null || _data$latestQuote === void 0 ? void 0 : _data$latestQuote.ap) || ((_data$latestQuote2 = data.latestQuote) === null || _data$latestQuote2 === void 0 ? void 0 : _data$latestQuote2.bp) || 0;\n          const openPrice = ((_data$dailyBar = data.dailyBar) === null || _data$dailyBar === void 0 ? void 0 : _data$dailyBar.o) || 0;\n          const prevClose = ((_data$prevDailyBar = data.prevDailyBar) === null || _data$prevDailyBar === void 0 ? void 0 : _data$prevDailyBar.c) || 0;\n\n          // Calculate change from previous close if available, otherwise from open\n          const referencePrice = prevClose || openPrice;\n          const change = referencePrice ? currentPrice - referencePrice : 0;\n          const changePercent = referencePrice ? change / referencePrice * 100 : 0;\n          return {\n            symbol,\n            price: currentPrice,\n            change,\n            changePercent,\n            volume: ((_data$dailyBar2 = data.dailyBar) === null || _data$dailyBar2 === void 0 ? void 0 : _data$dailyBar2.v) || 0,\n            high: ((_data$dailyBar3 = data.dailyBar) === null || _data$dailyBar3 === void 0 ? void 0 : _data$dailyBar3.h) || 0,\n            low: ((_data$dailyBar4 = data.dailyBar) === null || _data$dailyBar4 === void 0 ? void 0 : _data$dailyBar4.l) || 0,\n            open: openPrice,\n            close: prevClose\n          };\n        });\n        setStocks(stockData);\n        setLastUpdated(new Date());\n        setError(null);\n      }\n    } catch (err) {\n      console.error('Error fetching stock data:', err);\n      setError('Failed to fetch stock data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchStockData();\n\n    // Auto-refresh every 30 seconds\n    const interval = setInterval(fetchStockData, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const renderContent = () => {\n    if (loading && stocks.length === 0) {\n      return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this);\n    }\n    if (activeTab === 'market') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchStockData,\n            className: \"retry-button\",\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stocks-grid\",\n          children: stocks.map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n            stock: stock\n          }, stock.symbol, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), stocks.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No stock data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchStockData,\n            className: \"retry-button\",\n            children: \"Load Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n    return /*#__PURE__*/_jsxDEV(PortfolioPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      lastUpdated: activeTab === 'market' ? lastUpdated : null,\n      onRefresh: activeTab === 'market' ? fetchStockData : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'market' ? 'active' : ''}`,\n        onClick: () => setActiveTab('market'),\n        children: \"Market Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'portfolio' ? 'active' : ''}`,\n        onClick: () => setActiveTab('portfolio'),\n        children: \"Portfolio Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U6tJtX5JmfJCU4DscK98+T55yOE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","StockCard","LoadingSpinner","PortfolioPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","activeTab","setActiveTab","stocks","setStocks","loading","setLoading","error","setError","lastUpdated","setLastUpdated","fetchStockData","response","get","data","snapshots","stockData","Object","entries","map","symbol","_data$latestTrade","_data$latestQuote","_data$latestQuote2","_data$dailyBar","_data$prevDailyBar","_data$dailyBar2","_data$dailyBar3","_data$dailyBar4","currentPrice","latestTrade","p","latestQuote","ap","bp","openPrice","dailyBar","o","prevClose","prevDailyBar","c","referencePrice","change","changePercent","price","volume","v","high","h","low","l","open","close","Date","err","console","interval","setInterval","clearInterval","renderContent","length","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","stock","onRefresh","_c","$RefreshReg$"],"sources":["/Users/orihalamit/Projects/dev/trading/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport StockCard from './components/StockCard';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport PortfolioPage from './components/Portfolio/PortfolioPage';\nimport './App.css';\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState('market'); // market, portfolio\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n\n  const fetchStockData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/stocks/snapshots');\n      \n      if (response.data && response.data.snapshots) {\n        const stockData = Object.entries(response.data.snapshots).map(([symbol, data]) => {\n          // Use latestTrade price if available, otherwise use latestQuote ask/bid\n          const currentPrice = data.latestTrade?.p || data.latestQuote?.ap || data.latestQuote?.bp || 0;\n          const openPrice = data.dailyBar?.o || 0;\n          const prevClose = data.prevDailyBar?.c || 0;\n          \n          // Calculate change from previous close if available, otherwise from open\n          const referencePrice = prevClose || openPrice;\n          const change = referencePrice ? (currentPrice - referencePrice) : 0;\n          const changePercent = referencePrice ? ((change / referencePrice) * 100) : 0;\n          \n          return {\n            symbol,\n            price: currentPrice,\n            change,\n            changePercent,\n            volume: data.dailyBar?.v || 0,\n            high: data.dailyBar?.h || 0,\n            low: data.dailyBar?.l || 0,\n            open: openPrice,\n            close: prevClose\n          };\n        });\n        \n        setStocks(stockData);\n        setLastUpdated(new Date());\n        setError(null);\n      }\n    } catch (err) {\n      console.error('Error fetching stock data:', err);\n      setError('Failed to fetch stock data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchStockData();\n    \n    // Auto-refresh every 30 seconds\n    const interval = setInterval(fetchStockData, 30000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const renderContent = () => {\n    if (loading && stocks.length === 0) {\n      return <LoadingSpinner />;\n    }\n\n    if (activeTab === 'market') {\n      return (\n        <>\n          {error && (\n            <div className=\"error-message\">\n              {error}\n              <button onClick={fetchStockData} className=\"retry-button\">\n                Retry\n              </button>\n            </div>\n          )}\n          \n          <div className=\"stocks-grid\">\n            {stocks.map((stock) => (\n              <StockCard key={stock.symbol} stock={stock} />\n            ))}\n          </div>\n          \n          {stocks.length === 0 && !loading && (\n            <div className=\"no-data\">\n              <p>No stock data available.</p>\n              <button onClick={fetchStockData} className=\"retry-button\">\n                Load Data\n              </button>\n            </div>\n          )}\n        </>\n      );\n    }\n\n    return <PortfolioPage />;\n  };\n\n  return (\n    <div className=\"app\">\n      <Header \n        lastUpdated={activeTab === 'market' ? lastUpdated : null}\n        onRefresh={activeTab === 'market' ? fetchStockData : null}\n      />\n\n      <div className=\"tabs\">\n        <button\n          className={`tab-button ${activeTab === 'market' ? 'active' : ''}`}\n          onClick={() => setActiveTab('market')}\n        >\n          Market Overview\n        </button>\n        <button\n          className={`tab-button ${activeTab === 'portfolio' ? 'active' : ''}`}\n          onClick={() => setActiveTab('portfolio')}\n        >\n          Portfolio Management\n        </button>\n      </div>\n\n      <div className=\"content\">\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}