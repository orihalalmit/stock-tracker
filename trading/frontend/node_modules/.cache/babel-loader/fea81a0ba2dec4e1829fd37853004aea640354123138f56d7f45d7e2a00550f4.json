{"ast":null,"code":"var _jsxFileName = \"/Users/orihalamit/Projects/dev/trading/frontend/src/components/Portfolio/PortfolioPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './PortfolioPage.css';\nimport PortfolioSummary from './PortfolioSummary';\nimport PositionsList from './PositionsList';\nimport AddPositionForm from './AddPositionForm';\nimport TransactionHistory from './TransactionHistory';\nimport ImportCSV from './ImportCSV';\nimport PortfolioInsights from './PortfolioInsights';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PortfolioPage = ({\n  activeView = 'management'\n}) => {\n  _s();\n  const [portfolios, setPortfolios] = useState([]);\n  const [selectedPortfolio, setSelectedPortfolio] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState(activeView); // management, insights\n  const [showPremarket, setShowPremarket] = useState(false);\n\n  // Sync activeTab with activeView prop when it changes\n  useEffect(() => {\n    setActiveTab(activeView);\n  }, [activeView]);\n  useEffect(() => {\n    fetchPortfolios();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Re-fetch portfolio data when premarket toggle changes\n  useEffect(() => {\n    if (selectedPortfolio) {\n      handlePortfolioChange(selectedPortfolio._id);\n    }\n  }, [showPremarket]);\n  const fetchPortfolios = async () => {\n    try {\n      // First get the list of portfolios\n      const response = await axios.get('/api/portfolio');\n      const portfoliosList = response.data;\n      if (portfoliosList.length > 0) {\n        // Try to restore last selected portfolio from localStorage\n        const lastSelectedId = localStorage.getItem('lastSelectedPortfolioId');\n        let portfolioToSelect = portfoliosList.find(p => p._id === lastSelectedId);\n\n        // If last selected doesn't exist, use current selected or first one\n        if (!portfolioToSelect) {\n          portfolioToSelect = portfoliosList.find(p => p._id === (selectedPortfolio === null || selectedPortfolio === void 0 ? void 0 : selectedPortfolio._id)) || portfoliosList[0];\n        }\n        const url = `/api/portfolio/${portfolioToSelect._id}${showPremarket ? '?include_premarket=true' : ''}`;\n        const detailedResponse = await axios.get(url);\n        const updatedPortfolio = detailedResponse.data;\n\n        // Update the portfolio in the list with the detailed data\n        const updatedPortfolios = portfoliosList.map(p => p._id === updatedPortfolio._id ? updatedPortfolio : p);\n        setPortfolios(updatedPortfolios);\n        setSelectedPortfolio(updatedPortfolio);\n\n        // Save to localStorage\n        localStorage.setItem('lastSelectedPortfolioId', updatedPortfolio._id);\n      } else {\n        setPortfolios(portfoliosList);\n        setSelectedPortfolio(null);\n        localStorage.removeItem('lastSelectedPortfolioId');\n      }\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch portfolios');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createPortfolio = async name => {\n    try {\n      const response = await axios.post('/api/portfolio', {\n        name\n      });\n      const newPortfolio = response.data;\n      setPortfolios([...portfolios, newPortfolio]);\n      setSelectedPortfolio(newPortfolio);\n      localStorage.setItem('lastSelectedPortfolioId', newPortfolio._id);\n      setError(null);\n    } catch (err) {\n      setError('Failed to create portfolio');\n      console.error(err);\n    }\n  };\n  const deletePortfolio = async portfolioId => {\n    if (!window.confirm('Are you sure you want to delete this portfolio? This action cannot be undone.')) {\n      return;\n    }\n    try {\n      await axios.delete(`/api/portfolio/${portfolioId}`);\n      const updatedPortfolios = portfolios.filter(p => p._id !== portfolioId);\n      setPortfolios(updatedPortfolios);\n\n      // If we deleted the selected portfolio, select another one\n      if ((selectedPortfolio === null || selectedPortfolio === void 0 ? void 0 : selectedPortfolio._id) === portfolioId) {\n        if (updatedPortfolios.length > 0) {\n          const newSelected = updatedPortfolios[0];\n          setSelectedPortfolio(newSelected);\n          localStorage.setItem('lastSelectedPortfolioId', newSelected._id);\n        } else {\n          setSelectedPortfolio(null);\n          localStorage.removeItem('lastSelectedPortfolioId');\n        }\n      }\n      setError(null);\n    } catch (err) {\n      setError('Failed to delete portfolio');\n      console.error(err);\n    }\n  };\n  const handleAddPosition = async position => {\n    try {\n      await axios.post(`/api/portfolio/${selectedPortfolio._id}/positions`, position);\n      await fetchPortfolios(); // Refresh all portfolios with latest data\n      setError(null);\n    } catch (err) {\n      setError('Failed to add position');\n      console.error(err);\n    }\n  };\n  const handleImportCSV = async file => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      await axios.post(`/api/portfolio/${selectedPortfolio._id}/import`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      await fetchPortfolios(); // Refresh all portfolios with latest data\n      setError(null);\n    } catch (err) {\n      setError('Failed to import positions');\n      console.error(err);\n    }\n  };\n  const handleConsolidatePositions = async () => {\n    if (!window.confirm('This will consolidate duplicate positions by combining shares and recalculating weighted average cost. Continue?')) {\n      return;\n    }\n    try {\n      const response = await axios.post(`/api/portfolio/${selectedPortfolio._id}/consolidate`);\n      if (response.data.duplicatesConsolidated > 0) {\n        alert(`Successfully consolidated ${response.data.duplicatesConsolidated} duplicate positions!`);\n      } else {\n        alert('No duplicate positions found to consolidate.');\n      }\n      await fetchPortfolios(); // Refresh all portfolios with latest data\n      setError(null);\n    } catch (err) {\n      setError('Failed to consolidate positions');\n      console.error(err);\n    }\n  };\n  const handlePortfolioChange = async portfolioId => {\n    try {\n      const url = `/api/portfolio/${portfolioId}${showPremarket ? '?include_premarket=true' : ''}`;\n      const response = await axios.get(url);\n      const portfolio = response.data;\n      setSelectedPortfolio(portfolio);\n      setPortfolios(portfolios.map(p => p._id === portfolio._id ? portfolio : p));\n      localStorage.setItem('lastSelectedPortfolioId', portfolioId);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch portfolio details');\n      console.error(err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading portfolios...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 12\n    }, this);\n  }\n  const renderTabContent = () => {\n    if (!selectedPortfolio) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-portfolio\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No portfolios found. Create a new portfolio to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const name = prompt('Enter portfolio name:');\n            if (name) createPortfolio(name);\n          },\n          children: \"Create Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this);\n    }\n    if (activeTab === 'insights') {\n      return /*#__PURE__*/_jsxDEV(PortfolioInsights, {\n        portfolio: selectedPortfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PortfolioSummary, {\n        portfolio: selectedPortfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PositionsList, {\n        positions: selectedPortfolio.positions,\n        portfolioId: selectedPortfolio._id,\n        onPositionUpdate: fetchPortfolios\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionHistory, {\n        portfolioId: selectedPortfolio._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"portfolio-actions\",\n        children: [/*#__PURE__*/_jsxDEV(AddPositionForm, {\n          onSubmit: handleAddPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImportCSV, {\n          onImport: handleImportCSV\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"consolidate-btn\",\n          onClick: handleConsolidatePositions,\n          title: \"Consolidate duplicate positions\",\n          children: \"\\uD83D\\uDD04 Consolidate Duplicates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Portfolio Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"portfolio-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: (selectedPortfolio === null || selectedPortfolio === void 0 ? void 0 : selectedPortfolio._id) || '',\n          onChange: e => handlePortfolioChange(e.target.value),\n          children: portfolios.map(portfolio => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: portfolio._id,\n            children: portfolio.name\n          }, portfolio._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-portfolio-btn\",\n          onClick: () => {\n            const name = prompt('Enter portfolio name:');\n            if (name) createPortfolio(name);\n          },\n          children: \"New Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), selectedPortfolio && portfolios.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-portfolio-btn\",\n          onClick: () => deletePortfolio(selectedPortfolio._id),\n          title: \"Delete Portfolio\",\n          children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }, this), selectedPortfolio && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `portfolio-tab-button ${activeTab === 'management' ? 'active' : ''}`,\n        onClick: () => setActiveTab('management'),\n        children: \"\\uD83D\\uDCCA Overview & Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `portfolio-tab-button ${activeTab === 'insights' ? 'active' : ''}`,\n        onClick: () => setActiveTab('insights'),\n        children: \"\\uD83D\\uDCA1 Daily Insights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this), renderTabContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioPage, \"AU40kfxQzh68qg9mROWOlvz0p4I=\");\n_c = PortfolioPage;\nexport default PortfolioPage;\nvar _c;\n$RefreshReg$(_c, \"PortfolioPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","PortfolioSummary","PositionsList","AddPositionForm","TransactionHistory","ImportCSV","PortfolioInsights","jsxDEV","_jsxDEV","Fragment","_Fragment","PortfolioPage","activeView","_s","portfolios","setPortfolios","selectedPortfolio","setSelectedPortfolio","loading","setLoading","error","setError","activeTab","setActiveTab","showPremarket","setShowPremarket","fetchPortfolios","handlePortfolioChange","_id","response","get","portfoliosList","data","length","lastSelectedId","localStorage","getItem","portfolioToSelect","find","p","url","detailedResponse","updatedPortfolio","updatedPortfolios","map","setItem","removeItem","err","console","createPortfolio","name","post","newPortfolio","deletePortfolio","portfolioId","window","confirm","delete","filter","newSelected","handleAddPosition","position","handleImportCSV","file","formData","FormData","append","headers","handleConsolidatePositions","duplicatesConsolidated","alert","portfolio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderTabContent","onClick","prompt","positions","onPositionUpdate","onSubmit","onImport","title","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/orihalamit/Projects/dev/trading/frontend/src/components/Portfolio/PortfolioPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './PortfolioPage.css';\nimport PortfolioSummary from './PortfolioSummary';\nimport PositionsList from './PositionsList';\nimport AddPositionForm from './AddPositionForm';\nimport TransactionHistory from './TransactionHistory';\nimport ImportCSV from './ImportCSV';\nimport PortfolioInsights from './PortfolioInsights';\n\nconst PortfolioPage = ({ activeView = 'management' }) => {\n  const [portfolios, setPortfolios] = useState([]);\n  const [selectedPortfolio, setSelectedPortfolio] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState(activeView); // management, insights\n  const [showPremarket, setShowPremarket] = useState(false);\n\n  // Sync activeTab with activeView prop when it changes\n  useEffect(() => {\n    setActiveTab(activeView);\n  }, [activeView]);\n\n  useEffect(() => {\n    fetchPortfolios();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Re-fetch portfolio data when premarket toggle changes\n  useEffect(() => {\n    if (selectedPortfolio) {\n      handlePortfolioChange(selectedPortfolio._id);\n    }\n  }, [showPremarket]);\n\n  const fetchPortfolios = async () => {\n    try {\n      // First get the list of portfolios\n      const response = await axios.get('/api/portfolio');\n      const portfoliosList = response.data;\n\n      if (portfoliosList.length > 0) {\n        // Try to restore last selected portfolio from localStorage\n        const lastSelectedId = localStorage.getItem('lastSelectedPortfolioId');\n        let portfolioToSelect = portfoliosList.find(p => p._id === lastSelectedId);\n        \n        // If last selected doesn't exist, use current selected or first one\n        if (!portfolioToSelect) {\n          portfolioToSelect = portfoliosList.find(p => p._id === selectedPortfolio?._id) || portfoliosList[0];\n        }\n\n        const url = `/api/portfolio/${portfolioToSelect._id}${showPremarket ? '?include_premarket=true' : ''}`;\n        const detailedResponse = await axios.get(url);\n        const updatedPortfolio = detailedResponse.data;\n\n        // Update the portfolio in the list with the detailed data\n        const updatedPortfolios = portfoliosList.map(p => \n          p._id === updatedPortfolio._id ? updatedPortfolio : p\n        );\n\n        setPortfolios(updatedPortfolios);\n        setSelectedPortfolio(updatedPortfolio);\n        \n        // Save to localStorage\n        localStorage.setItem('lastSelectedPortfolioId', updatedPortfolio._id);\n      } else {\n        setPortfolios(portfoliosList);\n        setSelectedPortfolio(null);\n        localStorage.removeItem('lastSelectedPortfolioId');\n      }\n      \n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch portfolios');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createPortfolio = async (name) => {\n    try {\n      const response = await axios.post('/api/portfolio', { name });\n      const newPortfolio = response.data;\n      setPortfolios([...portfolios, newPortfolio]);\n      setSelectedPortfolio(newPortfolio);\n      localStorage.setItem('lastSelectedPortfolioId', newPortfolio._id);\n      setError(null);\n    } catch (err) {\n      setError('Failed to create portfolio');\n      console.error(err);\n    }\n  };\n\n  const deletePortfolio = async (portfolioId) => {\n    if (!window.confirm('Are you sure you want to delete this portfolio? This action cannot be undone.')) {\n      return;\n    }\n\n    try {\n      await axios.delete(`/api/portfolio/${portfolioId}`);\n      \n      const updatedPortfolios = portfolios.filter(p => p._id !== portfolioId);\n      setPortfolios(updatedPortfolios);\n      \n      // If we deleted the selected portfolio, select another one\n      if (selectedPortfolio?._id === portfolioId) {\n        if (updatedPortfolios.length > 0) {\n          const newSelected = updatedPortfolios[0];\n          setSelectedPortfolio(newSelected);\n          localStorage.setItem('lastSelectedPortfolioId', newSelected._id);\n        } else {\n          setSelectedPortfolio(null);\n          localStorage.removeItem('lastSelectedPortfolioId');\n        }\n      }\n      \n      setError(null);\n    } catch (err) {\n      setError('Failed to delete portfolio');\n      console.error(err);\n    }\n  };\n\n  const handleAddPosition = async (position) => {\n    try {\n      await axios.post(\n        `/api/portfolio/${selectedPortfolio._id}/positions`,\n        position\n      );\n      await fetchPortfolios(); // Refresh all portfolios with latest data\n      setError(null);\n    } catch (err) {\n      setError('Failed to add position');\n      console.error(err);\n    }\n  };\n\n  const handleImportCSV = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      \n      await axios.post(\n        `/api/portfolio/${selectedPortfolio._id}/import`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      );\n      \n      await fetchPortfolios(); // Refresh all portfolios with latest data\n      setError(null);\n    } catch (err) {\n      setError('Failed to import positions');\n      console.error(err);\n    }\n  };\n\n  const handleConsolidatePositions = async () => {\n    if (!window.confirm('This will consolidate duplicate positions by combining shares and recalculating weighted average cost. Continue?')) {\n      return;\n    }\n\n    try {\n      const response = await axios.post(`/api/portfolio/${selectedPortfolio._id}/consolidate`);\n      \n      if (response.data.duplicatesConsolidated > 0) {\n        alert(`Successfully consolidated ${response.data.duplicatesConsolidated} duplicate positions!`);\n      } else {\n        alert('No duplicate positions found to consolidate.');\n      }\n      \n      await fetchPortfolios(); // Refresh all portfolios with latest data\n      setError(null);\n    } catch (err) {\n      setError('Failed to consolidate positions');\n      console.error(err);\n    }\n  };\n\n  const handlePortfolioChange = async (portfolioId) => {\n    try {\n      const url = `/api/portfolio/${portfolioId}${showPremarket ? '?include_premarket=true' : ''}`;\n      const response = await axios.get(url);\n      const portfolio = response.data;\n      setSelectedPortfolio(portfolio);\n      setPortfolios(portfolios.map(p => \n        p._id === portfolio._id ? portfolio : p\n      ));\n      localStorage.setItem('lastSelectedPortfolioId', portfolioId);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch portfolio details');\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading portfolios...</div>;\n  }\n\n  const renderTabContent = () => {\n    if (!selectedPortfolio) {\n      return (\n        <div className=\"no-portfolio\">\n          <p>No portfolios found. Create a new portfolio to get started.</p>\n          <button\n            onClick={() => {\n              const name = prompt('Enter portfolio name:');\n              if (name) createPortfolio(name);\n            }}\n          >\n            Create Portfolio\n          </button>\n        </div>\n      );\n    }\n\n    if (activeTab === 'insights') {\n      return <PortfolioInsights portfolio={selectedPortfolio} />;\n    }\n\n    return (\n      <>\n        <PortfolioSummary portfolio={selectedPortfolio} />\n\n        <PositionsList\n          positions={selectedPortfolio.positions}\n          portfolioId={selectedPortfolio._id}\n          onPositionUpdate={fetchPortfolios}\n        />\n\n        <TransactionHistory portfolioId={selectedPortfolio._id} />\n        \n        <div className=\"portfolio-actions\">\n          <AddPositionForm onSubmit={handleAddPosition} />\n          <ImportCSV onImport={handleImportCSV} />\n          <button \n            className=\"consolidate-btn\"\n            onClick={handleConsolidatePositions}\n            title=\"Consolidate duplicate positions\"\n          >\n            🔄 Consolidate Duplicates\n          </button>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"portfolio-page\">\n      <div className=\"portfolio-header\">\n        <h1>Portfolio Management</h1>\n        <div className=\"portfolio-selector\">\n          <select\n            value={selectedPortfolio?._id || ''}\n            onChange={(e) => handlePortfolioChange(e.target.value)}\n          >\n            {portfolios.map(portfolio => (\n              <option key={portfolio._id} value={portfolio._id}>\n                {portfolio.name}\n              </option>\n            ))}\n          </select>\n          <button\n            className=\"new-portfolio-btn\"\n            onClick={() => {\n              const name = prompt('Enter portfolio name:');\n              if (name) createPortfolio(name);\n            }}\n          >\n            New Portfolio\n          </button>\n          {selectedPortfolio && portfolios.length > 1 && (\n            <button\n              className=\"delete-portfolio-btn\"\n              onClick={() => deletePortfolio(selectedPortfolio._id)}\n              title=\"Delete Portfolio\"\n            >\n              🗑️ Delete\n            </button>\n          )}\n        </div>\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {/* Portfolio Sub-tabs */}\n      {selectedPortfolio && (\n        <div className=\"portfolio-tabs\">\n          <button\n            className={`portfolio-tab-button ${activeTab === 'management' ? 'active' : ''}`}\n            onClick={() => setActiveTab('management')}\n          >\n            📊 Overview & Management\n          </button>\n          <button\n            className={`portfolio-tab-button ${activeTab === 'insights' ? 'active' : ''}`}\n            onClick={() => setActiveTab('insights')}\n          >\n            💡 Daily Insights\n          </button>\n        </div>\n      )}\n\n      {renderTabContent()}\n    </div>\n  );\n};\n\nexport default PortfolioPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}