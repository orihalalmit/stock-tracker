{"ast":null,"code":"var _jsxFileName = \"/Users/orihalamit/Projects/dev/trading/frontend/src/components/Portfolio/PortfolioSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './PortfolioSummary.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioSummary = ({\n  portfolio\n}) => {\n  _s();\n  const [summary, setSummary] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchSummary();\n    const interval = setInterval(fetchSummary, 30000); // Update every 30 seconds\n    return () => clearInterval(interval);\n  }, [portfolio._id]);\n  const fetchSummary = async () => {\n    try {\n      const response = await axios.get(`/api/portfolio/${portfolio._id}`);\n      setSummary(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch portfolio summary');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(value);\n  };\n  const formatPercentage = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'percent',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value / 100);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-summary loading\",\n      children: \"Loading summary...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-summary error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  const totalValue = summary.currentValue;\n  const totalGainLoss = summary.totalGainLoss;\n  const gainLossPercent = totalGainLoss / (totalValue - totalGainLoss) * 100;\n  const isPositive = totalGainLoss >= 0;\n\n  // Group positions by sector\n  const sectorBreakdown = summary.positions.reduce((acc, position) => {\n    const sector = position.sector || 'Unknown';\n    if (!acc[sector]) {\n      acc[sector] = 0;\n    }\n    acc[sector] += position.shares * position.averagePrice;\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio-summary\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: portfolio.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"last-updated\",\n        children: [\"Last updated: \", new Date(portfolio.lastUpdated).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card total-value\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value\",\n          children: formatCurrency(totalValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtext\",\n          children: [\"Cost Basis: \", formatCurrency(summary.totalCost)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `summary-card daily-change ${summary.totalDailyGain >= 0 ? 'positive' : 'negative'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Today's Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value\",\n          children: formatCurrency(summary.totalDailyGain)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"percentage\",\n          children: formatPercentage(summary.totalDailyGainPercentage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `summary-card total-gain ${summary.totalOverallGain >= 0 ? 'positive' : 'negative'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Overall Gain/Loss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value\",\n          children: formatCurrency(summary.totalOverallGain)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"percentage\",\n          children: formatPercentage(summary.totalOverallGainPercentage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sector-breakdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sector Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sector-grid\",\n        children: Object.entries(sectorBreakdown).map(([sector, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sector-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sector-name\",\n            children: sector\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sector-value\",\n            children: formatCurrency(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sector-percentage\",\n            children: formatPercentage(value / (totalValue - summary.cash) * 100)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, sector, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-positions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Top Positions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"positions-grid\",\n        children: summary.positions.sort((a, b) => b.shares * b.averagePrice - a.shares * a.averagePrice).slice(0, 5).map(position => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"position-symbol\",\n            children: position.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"position-value\",\n            children: formatCurrency(position.shares * position.averagePrice)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"position-percent\",\n            children: formatPercentage(position.shares * position.averagePrice / (totalValue - summary.cash) * 100)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)]\n        }, position.symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-all-btn\",\n        onClick: async () => {\n          if (window.confirm('Are you sure you want to delete all portfolios? This action cannot be undone.')) {\n            try {\n              await fetch('/api/portfolio/all', {\n                method: 'DELETE'\n              });\n              window.location.reload();\n            } catch (error) {\n              console.error('Failed to delete portfolios:', error);\n              alert('Failed to delete portfolios');\n            }\n          }\n        },\n        children: \"Delete All Portfolios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioSummary, \"4NsVumfooczdqcrhY0LObVQdVQw=\");\n_c = PortfolioSummary;\nexport default PortfolioSummary;\nvar _c;\n$RefreshReg$(_c, \"PortfolioSummary\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PortfolioSummary","portfolio","_s","summary","setSummary","loading","setLoading","error","setError","fetchSummary","interval","setInterval","clearInterval","_id","response","get","data","err","console","formatCurrency","value","Intl","NumberFormat","style","currency","format","formatPercentage","minimumFractionDigits","maximumFractionDigits","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalValue","currentValue","totalGainLoss","gainLossPercent","isPositive","sectorBreakdown","positions","reduce","acc","position","sector","shares","averagePrice","name","Date","lastUpdated","toLocaleString","totalCost","totalDailyGain","totalDailyGainPercentage","totalOverallGain","totalOverallGainPercentage","Object","entries","map","cash","sort","a","b","slice","symbol","onClick","window","confirm","fetch","method","location","reload","alert","_c","$RefreshReg$"],"sources":["/Users/orihalamit/Projects/dev/trading/frontend/src/components/Portfolio/PortfolioSummary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './PortfolioSummary.css';\n\nconst PortfolioSummary = ({ portfolio }) => {\n  const [summary, setSummary] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchSummary();\n    const interval = setInterval(fetchSummary, 30000); // Update every 30 seconds\n    return () => clearInterval(interval);\n  }, [portfolio._id]);\n\n  const fetchSummary = async () => {\n    try {\n      const response = await axios.get(`/api/portfolio/${portfolio._id}`);\n      setSummary(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch portfolio summary');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(value);\n  };\n\n  const formatPercentage = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'percent',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value / 100);\n  };\n\n  if (loading) {\n    return <div className=\"portfolio-summary loading\">Loading summary...</div>;\n  }\n\n  if (error) {\n    return <div className=\"portfolio-summary error\">{error}</div>;\n  }\n\n  const totalValue = summary.currentValue;\n  const totalGainLoss = summary.totalGainLoss;\n  const gainLossPercent = (totalGainLoss / (totalValue - totalGainLoss)) * 100;\n  const isPositive = totalGainLoss >= 0;\n\n  // Group positions by sector\n  const sectorBreakdown = summary.positions.reduce((acc, position) => {\n    const sector = position.sector || 'Unknown';\n    if (!acc[sector]) {\n      acc[sector] = 0;\n    }\n    acc[sector] += position.shares * position.averagePrice;\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"portfolio-summary\">\n      <div className=\"summary-header\">\n        <h2>{portfolio.name}</h2>\n        <div className=\"last-updated\">\n          Last updated: {new Date(portfolio.lastUpdated).toLocaleString()}\n        </div>\n      </div>\n\n      <div className=\"summary-grid\">\n        <div className=\"summary-card total-value\">\n          <h3>Total Value</h3>\n          <div className=\"value\">{formatCurrency(totalValue)}</div>\n          <div className=\"subtext\">Cost Basis: {formatCurrency(summary.totalCost)}</div>\n        </div>\n\n        <div className={`summary-card daily-change ${summary.totalDailyGain >= 0 ? 'positive' : 'negative'}`}>\n          <h3>Today's Change</h3>\n          <div className=\"value\">{formatCurrency(summary.totalDailyGain)}</div>\n          <div className=\"percentage\">\n            {formatPercentage(summary.totalDailyGainPercentage)}\n          </div>\n        </div>\n\n        <div className={`summary-card total-gain ${summary.totalOverallGain >= 0 ? 'positive' : 'negative'}`}>\n          <h3>Overall Gain/Loss</h3>\n          <div className=\"value\">{formatCurrency(summary.totalOverallGain)}</div>\n          <div className=\"percentage\">\n            {formatPercentage(summary.totalOverallGainPercentage)}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"sector-breakdown\">\n        <h3>Sector Breakdown</h3>\n        <div className=\"sector-grid\">\n          {Object.entries(sectorBreakdown).map(([sector, value]) => (\n            <div key={sector} className=\"sector-card\">\n              <div className=\"sector-name\">{sector}</div>\n              <div className=\"sector-value\">{formatCurrency(value)}</div>\n              <div className=\"sector-percentage\">{formatPercentage((value / (totalValue - summary.cash)) * 100)}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"top-positions\">\n        <h3>Top Positions</h3>\n        <div className=\"positions-grid\">\n          {summary.positions\n            .sort((a, b) => (b.shares * b.averagePrice) - (a.shares * a.averagePrice))\n            .slice(0, 5)\n            .map(position => (\n              <div key={position.symbol} className=\"position-card\">\n                <div className=\"position-symbol\">{position.symbol}</div>\n                <div className=\"position-value\">\n                  {formatCurrency(position.shares * position.averagePrice)}\n                </div>\n                <div className=\"position-percent\">\n                  {formatPercentage((position.shares * position.averagePrice) / (totalValue - summary.cash) * 100)}\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n\n      <div className=\"portfolio-actions\">\n        <button \n          className=\"delete-all-btn\"\n          onClick={async () => {\n            if (window.confirm('Are you sure you want to delete all portfolios? This action cannot be undone.')) {\n              try {\n                await fetch('/api/portfolio/all', { method: 'DELETE' });\n                window.location.reload();\n              } catch (error) {\n                console.error('Failed to delete portfolios:', error);\n                alert('Failed to delete portfolios');\n              }\n            }\n          }}\n        >\n          Delete All Portfolios\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioSummary; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACda,YAAY,CAAC,CAAC;IACd,MAAMC,QAAQ,GAAGC,WAAW,CAACF,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;IACnD,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACT,SAAS,CAACY,GAAG,CAAC,CAAC;EAEnB,MAAMJ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,kBAAkBd,SAAS,CAACY,GAAG,EAAE,CAAC;MACnET,UAAU,CAACU,QAAQ,CAACE,IAAI,CAAC;MACzBR,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZT,QAAQ,CAAC,mCAAmC,CAAC;MAC7CU,OAAO,CAACX,KAAK,CAACU,GAAG,CAAC;IACpB,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMa,cAAc,GAAIC,KAAK,IAAK;IAChC,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;MACpCC,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAE;IACZ,CAAC,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;EAClB,CAAC;EAED,MAAMM,gBAAgB,GAAIN,KAAK,IAAK;IAClC,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;MACpCC,KAAK,EAAE,SAAS;MAChBI,qBAAqB,EAAE,CAAC;MACxBC,qBAAqB,EAAE;IACzB,CAAC,CAAC,CAACH,MAAM,CAACL,KAAK,GAAG,GAAG,CAAC;EACxB,CAAC;EAED,IAAIf,OAAO,EAAE;IACX,oBAAON,OAAA;MAAK8B,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5E;EAEA,IAAI3B,KAAK,EAAE;IACT,oBAAOR,OAAA;MAAK8B,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAEvB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC/D;EAEA,MAAMC,UAAU,GAAGhC,OAAO,CAACiC,YAAY;EACvC,MAAMC,aAAa,GAAGlC,OAAO,CAACkC,aAAa;EAC3C,MAAMC,eAAe,GAAID,aAAa,IAAIF,UAAU,GAAGE,aAAa,CAAC,GAAI,GAAG;EAC5E,MAAME,UAAU,GAAGF,aAAa,IAAI,CAAC;;EAErC;EACA,MAAMG,eAAe,GAAGrC,OAAO,CAACsC,SAAS,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;IAClE,MAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAM,IAAI,SAAS;IAC3C,IAAI,CAACF,GAAG,CAACE,MAAM,CAAC,EAAE;MAChBF,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC;IACjB;IACAF,GAAG,CAACE,MAAM,CAAC,IAAID,QAAQ,CAACE,MAAM,GAAGF,QAAQ,CAACG,YAAY;IACtD,OAAOJ,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,oBACE5C,OAAA;IAAK8B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC/B,OAAA;MAAK8B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B/B,OAAA;QAAA+B,QAAA,EAAK7B,SAAS,CAAC+C;MAAI;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBnC,OAAA;QAAK8B,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAC,gBACd,EAAC,IAAImB,IAAI,CAAChD,SAAS,CAACiD,WAAW,CAAC,CAACC,cAAc,CAAC,CAAC;MAAA;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENnC,OAAA;MAAK8B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B/B,OAAA;QAAK8B,SAAS,EAAC,0BAA0B;QAAAC,QAAA,gBACvC/B,OAAA;UAAA+B,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBnC,OAAA;UAAK8B,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAEX,cAAc,CAACgB,UAAU;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzDnC,OAAA;UAAK8B,SAAS,EAAC,SAAS;UAAAC,QAAA,GAAC,cAAY,EAACX,cAAc,CAAChB,OAAO,CAACiD,SAAS,CAAC;QAAA;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eAENnC,OAAA;QAAK8B,SAAS,EAAE,6BAA6B1B,OAAO,CAACkD,cAAc,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU,EAAG;QAAAvB,QAAA,gBACnG/B,OAAA;UAAA+B,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBnC,OAAA;UAAK8B,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAEX,cAAc,CAAChB,OAAO,CAACkD,cAAc;QAAC;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrEnC,OAAA;UAAK8B,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxBJ,gBAAgB,CAACvB,OAAO,CAACmD,wBAAwB;QAAC;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENnC,OAAA;QAAK8B,SAAS,EAAE,2BAA2B1B,OAAO,CAACoD,gBAAgB,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU,EAAG;QAAAzB,QAAA,gBACnG/B,OAAA;UAAA+B,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BnC,OAAA;UAAK8B,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAEX,cAAc,CAAChB,OAAO,CAACoD,gBAAgB;QAAC;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvEnC,OAAA;UAAK8B,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxBJ,gBAAgB,CAACvB,OAAO,CAACqD,0BAA0B;QAAC;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENnC,OAAA;MAAK8B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B/B,OAAA;QAAA+B,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBnC,OAAA;QAAK8B,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzB2B,MAAM,CAACC,OAAO,CAAClB,eAAe,CAAC,CAACmB,GAAG,CAAC,CAAC,CAACd,MAAM,EAAEzB,KAAK,CAAC,kBACnDrB,OAAA;UAAkB8B,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACvC/B,OAAA;YAAK8B,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEe;UAAM;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3CnC,OAAA;YAAK8B,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEX,cAAc,CAACC,KAAK;UAAC;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3DnC,OAAA;YAAK8B,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAEJ,gBAAgB,CAAEN,KAAK,IAAIe,UAAU,GAAGhC,OAAO,CAACyD,IAAI,CAAC,GAAI,GAAG;UAAC;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAHhGW,MAAM;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIX,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENnC,OAAA;MAAK8B,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B/B,OAAA;QAAA+B,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBnC,OAAA;QAAK8B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5B3B,OAAO,CAACsC,SAAS,CACfoB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMA,CAAC,CAACjB,MAAM,GAAGiB,CAAC,CAAChB,YAAY,GAAKe,CAAC,CAAChB,MAAM,GAAGgB,CAAC,CAACf,YAAa,CAAC,CACzEiB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACXL,GAAG,CAACf,QAAQ,iBACX7C,OAAA;UAA2B8B,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAClD/B,OAAA;YAAK8B,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAEc,QAAQ,CAACqB;UAAM;YAAAlC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACxDnC,OAAA;YAAK8B,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC5BX,cAAc,CAACyB,QAAQ,CAACE,MAAM,GAAGF,QAAQ,CAACG,YAAY;UAAC;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC,eACNnC,OAAA;YAAK8B,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC9BJ,gBAAgB,CAAEkB,QAAQ,CAACE,MAAM,GAAGF,QAAQ,CAACG,YAAY,IAAKZ,UAAU,GAAGhC,OAAO,CAACyD,IAAI,CAAC,GAAG,GAAG;UAAC;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7F,CAAC;QAAA,GAPEU,QAAQ,CAACqB,MAAM;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQpB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENnC,OAAA;MAAK8B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChC/B,OAAA;QACE8B,SAAS,EAAC,gBAAgB;QAC1BqC,OAAO,EAAE,MAAAA,CAAA,KAAY;UACnB,IAAIC,MAAM,CAACC,OAAO,CAAC,+EAA+E,CAAC,EAAE;YACnG,IAAI;cACF,MAAMC,KAAK,CAAC,oBAAoB,EAAE;gBAAEC,MAAM,EAAE;cAAS,CAAC,CAAC;cACvDH,MAAM,CAACI,QAAQ,CAACC,MAAM,CAAC,CAAC;YAC1B,CAAC,CAAC,OAAOjE,KAAK,EAAE;cACdW,OAAO,CAACX,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;cACpDkE,KAAK,CAAC,6BAA6B,CAAC;YACtC;UACF;QACF,CAAE;QAAA3C,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CApJIF,gBAAgB;AAAA0E,EAAA,GAAhB1E,gBAAgB;AAsJtB,eAAeA,gBAAgB;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}