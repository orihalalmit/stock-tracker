{"ast":null,"code":"var _jsxFileName = \"/Users/orihalamit/Projects/dev/trading/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport StockCard from './components/StockCard';\nimport CurrencyCard from './components/CurrencyCard';\nimport BitcoinCard from './components/BitcoinCard';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport PortfolioPage from './components/Portfolio/PortfolioPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeTab, setActiveTab] = useState('portfolio'); // market, portfolio\n  const [stocks, setStocks] = useState([]);\n  const [usdIls, setUsdIls] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const fetchUsdIlsData = async () => {\n    try {\n      const response = await axios.get('/api/forex/usdils');\n      setUsdIls(response.data);\n    } catch (err) {\n      console.error('Error fetching USD/ILS data:', err);\n      setUsdIls({\n        symbol: 'USD/ILS',\n        rate: 0,\n        previousRate: 0,\n        dailyChange: 0,\n        dailyChangePercent: 0,\n        timestamp: new Date().toISOString(),\n        lastUpdated: 'N/A',\n        error: 'Failed to fetch rate'\n      });\n    }\n  };\n  const fetchStockData = async () => {\n    try {\n      setLoading(true);\n      // Define the tickers to display in market overview\n      const tickers = [\n      // Major ETFs and Indices\n      'SPY', 'QQQ', 'IWM', 'RSP', 'MAGS',\n      // Volatility ETFs (VIX alternatives)\n      'VXX', 'UVXY', 'SVXY',\n      // Individual stocks from your portfolio\n      'AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', 'NVDA', 'META',\n      // Specific requested stocks\n      'PLTR', 'HIMS',\n      // Crypto stocks (Bitcoin and Ethereum focused)\n      'IBIT', 'ETHE', 'ETHW'];\n\n      // Fetch both stock data and USD/ILS data in parallel\n      const [stockResponse] = await Promise.all([axios.get(`/api/stocks/snapshots?symbols=${tickers.join(',')}`), fetchUsdIlsData()]);\n      if (stockResponse.data && stockResponse.data.snapshots) {\n        const stockData = Object.entries(stockResponse.data.snapshots).filter(([symbol, data]) => {\n          var _data$latestTrade, _data$latestQuote, _data$latestQuote2;\n          // Filter out symbols with no data\n          return data && (((_data$latestTrade = data.latestTrade) === null || _data$latestTrade === void 0 ? void 0 : _data$latestTrade.p) || ((_data$latestQuote = data.latestQuote) === null || _data$latestQuote === void 0 ? void 0 : _data$latestQuote.ap) || ((_data$latestQuote2 = data.latestQuote) === null || _data$latestQuote2 === void 0 ? void 0 : _data$latestQuote2.bp));\n        }).map(([symbol, data]) => {\n          var _data$latestTrade2, _data$latestQuote3, _data$latestQuote4, _data$dailyBar, _data$prevDailyBar, _data$dailyBar2, _data$dailyBar3, _data$dailyBar4;\n          // Use latestTrade price if available, otherwise use latestQuote ask/bid\n          const currentPrice = ((_data$latestTrade2 = data.latestTrade) === null || _data$latestTrade2 === void 0 ? void 0 : _data$latestTrade2.p) || ((_data$latestQuote3 = data.latestQuote) === null || _data$latestQuote3 === void 0 ? void 0 : _data$latestQuote3.ap) || ((_data$latestQuote4 = data.latestQuote) === null || _data$latestQuote4 === void 0 ? void 0 : _data$latestQuote4.bp) || 0;\n          const openPrice = ((_data$dailyBar = data.dailyBar) === null || _data$dailyBar === void 0 ? void 0 : _data$dailyBar.o) || 0;\n          const prevClose = ((_data$prevDailyBar = data.prevDailyBar) === null || _data$prevDailyBar === void 0 ? void 0 : _data$prevDailyBar.c) || 0;\n\n          // Calculate change from previous close if available, otherwise from open\n          const referencePrice = prevClose || openPrice;\n          const change = referencePrice ? currentPrice - referencePrice : 0;\n          const changePercent = referencePrice ? change / referencePrice * 100 : 0;\n          return {\n            symbol,\n            price: currentPrice,\n            change,\n            changePercent,\n            volume: ((_data$dailyBar2 = data.dailyBar) === null || _data$dailyBar2 === void 0 ? void 0 : _data$dailyBar2.v) || 0,\n            high: ((_data$dailyBar3 = data.dailyBar) === null || _data$dailyBar3 === void 0 ? void 0 : _data$dailyBar3.h) || 0,\n            low: ((_data$dailyBar4 = data.dailyBar) === null || _data$dailyBar4 === void 0 ? void 0 : _data$dailyBar4.l) || 0,\n            open: openPrice,\n            close: prevClose\n          };\n        });\n        setStocks(stockData);\n        setLastUpdated(new Date());\n\n        // Show info message if some symbols were filtered out\n        if (stockData.length < tickers.length) {\n          console.log(`Note: ${tickers.length - stockData.length} symbols were not available or had no data`);\n          console.log('Note: VIX, TA35, and TA125 are not supported by Alpaca API. Using VXX, UVXY, SVXY as VIX alternatives.');\n        }\n        setError(null);\n      } else {\n        setError('No market data available. Please check your API configuration.');\n      }\n    } catch (err) {\n      console.error('Error fetching stock data:', err);\n      setError('Failed to fetch stock data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (activeTab === 'market') {\n      fetchStockData();\n\n      // Auto-refresh every 30 seconds only when market tab is active\n      const interval = setInterval(fetchStockData, 30000);\n      return () => clearInterval(interval);\n    }\n  }, [activeTab]);\n  const renderContent = () => {\n    if (loading && stocks.length === 0) {\n      return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 14\n      }, this);\n    }\n    if (activeTab === 'market') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchStockData,\n            className: \"retry-button\",\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"market-overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stocks-grid\",\n              children: usdIls && /*#__PURE__*/_jsxDEV(CurrencyCard, {\n                currency: usdIls\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"Major Indices & ETFs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stocks-grid\",\n              children: stocks.filter(stock => ['SPY', 'QQQ', 'IWM', 'RSP', 'MAGS'].includes(stock.symbol)).map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n                stock: stock\n              }, stock.symbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"Volatility ETFs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stocks-grid\",\n              children: stocks.filter(stock => ['VXX', 'UVXY', 'SVXY'].includes(stock.symbol)).map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n                stock: stock\n              }, stock.symbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"Individual Stocks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stocks-grid\",\n              children: stocks.filter(stock => ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', 'NVDA', 'META', 'PLTR', 'HIMS'].includes(stock.symbol)).map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n                stock: stock\n              }, stock.symbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"Bitcoin & Ethereum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stocks-grid\",\n              children: stocks.filter(stock => ['IBIT', 'ETHE', 'ETHW'].includes(stock.symbol)).map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n                stock: stock\n              }, stock.symbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), stocks.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No stock data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchStockData,\n            className: \"retry-button\",\n            children: \"Load Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n    return /*#__PURE__*/_jsxDEV(PortfolioPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      lastUpdated: activeTab === 'market' ? lastUpdated : null,\n      onRefresh: activeTab === 'market' ? fetchStockData : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'market' ? 'active' : ''}`,\n        onClick: () => setActiveTab('market'),\n        children: \"Market Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'portfolio' ? 'active' : ''}`,\n        onClick: () => setActiveTab('portfolio'),\n        children: \"Portfolio Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3Sd7W6Qj+JtV9iDfqMGTotQZNPc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","StockCard","CurrencyCard","BitcoinCard","LoadingSpinner","PortfolioPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","activeTab","setActiveTab","stocks","setStocks","usdIls","setUsdIls","loading","setLoading","error","setError","lastUpdated","setLastUpdated","fetchUsdIlsData","response","get","data","err","console","symbol","rate","previousRate","dailyChange","dailyChangePercent","timestamp","Date","toISOString","fetchStockData","tickers","stockResponse","Promise","all","join","snapshots","stockData","Object","entries","filter","_data$latestTrade","_data$latestQuote","_data$latestQuote2","latestTrade","p","latestQuote","ap","bp","map","_data$latestTrade2","_data$latestQuote3","_data$latestQuote4","_data$dailyBar","_data$prevDailyBar","_data$dailyBar2","_data$dailyBar3","_data$dailyBar4","currentPrice","openPrice","dailyBar","o","prevClose","prevDailyBar","c","referencePrice","change","changePercent","price","volume","v","high","h","low","l","open","close","length","log","interval","setInterval","clearInterval","renderContent","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","currency","stock","includes","onRefresh","_c","$RefreshReg$"],"sources":["/Users/orihalamit/Projects/dev/trading/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport StockCard from './components/StockCard';\nimport CurrencyCard from './components/CurrencyCard';\nimport BitcoinCard from './components/BitcoinCard';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport PortfolioPage from './components/Portfolio/PortfolioPage';\nimport './App.css';\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState('portfolio'); // market, portfolio\n  const [stocks, setStocks] = useState([]);\n  const [usdIls, setUsdIls] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n\n  const fetchUsdIlsData = async () => {\n    try {\n      const response = await axios.get('/api/forex/usdils');\n      setUsdIls(response.data);\n    } catch (err) {\n      console.error('Error fetching USD/ILS data:', err);\n      setUsdIls({\n        symbol: 'USD/ILS',\n        rate: 0,\n        previousRate: 0,\n        dailyChange: 0,\n        dailyChangePercent: 0,\n        timestamp: new Date().toISOString(),\n        lastUpdated: 'N/A',\n        error: 'Failed to fetch rate'\n      });\n    }\n  };\n\n  const fetchStockData = async () => {\n    try {\n      setLoading(true);\n      // Define the tickers to display in market overview\n      const tickers = [\n        // Major ETFs and Indices\n        'SPY', 'QQQ', 'IWM', 'RSP', 'MAGS',\n        // Volatility ETFs (VIX alternatives)\n        'VXX', 'UVXY', 'SVXY',\n        // Individual stocks from your portfolio\n        'AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', 'NVDA', 'META',\n        // Specific requested stocks\n        'PLTR', 'HIMS',\n        // Crypto stocks (Bitcoin and Ethereum focused)\n        'IBIT', 'ETHE', 'ETHW'\n      ];\n      \n      // Fetch both stock data and USD/ILS data in parallel\n      const [stockResponse] = await Promise.all([\n        axios.get(`/api/stocks/snapshots?symbols=${tickers.join(',')}`),\n        fetchUsdIlsData()\n      ]);\n      \n      if (stockResponse.data && stockResponse.data.snapshots) {\n        const stockData = Object.entries(stockResponse.data.snapshots)\n          .filter(([symbol, data]) => {\n            // Filter out symbols with no data\n            return data && (data.latestTrade?.p || data.latestQuote?.ap || data.latestQuote?.bp);\n          })\n          .map(([symbol, data]) => {\n            // Use latestTrade price if available, otherwise use latestQuote ask/bid\n            const currentPrice = data.latestTrade?.p || data.latestQuote?.ap || data.latestQuote?.bp || 0;\n            const openPrice = data.dailyBar?.o || 0;\n            const prevClose = data.prevDailyBar?.c || 0;\n            \n            // Calculate change from previous close if available, otherwise from open\n            const referencePrice = prevClose || openPrice;\n            const change = referencePrice ? (currentPrice - referencePrice) : 0;\n            const changePercent = referencePrice ? ((change / referencePrice) * 100) : 0;\n            \n            return {\n              symbol,\n              price: currentPrice,\n              change,\n              changePercent,\n              volume: data.dailyBar?.v || 0,\n              high: data.dailyBar?.h || 0,\n              low: data.dailyBar?.l || 0,\n              open: openPrice,\n              close: prevClose\n            };\n          });\n        \n        setStocks(stockData);\n        setLastUpdated(new Date());\n        \n        // Show info message if some symbols were filtered out\n        if (stockData.length < tickers.length) {\n          console.log(`Note: ${tickers.length - stockData.length} symbols were not available or had no data`);\n          console.log('Note: VIX, TA35, and TA125 are not supported by Alpaca API. Using VXX, UVXY, SVXY as VIX alternatives.');\n        }\n        \n        setError(null);\n      } else {\n        setError('No market data available. Please check your API configuration.');\n      }\n    } catch (err) {\n      console.error('Error fetching stock data:', err);\n      setError('Failed to fetch stock data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (activeTab === 'market') {\n      fetchStockData();\n      \n      // Auto-refresh every 30 seconds only when market tab is active\n      const interval = setInterval(fetchStockData, 30000);\n      \n      return () => clearInterval(interval);\n    }\n  }, [activeTab]);\n\n  const renderContent = () => {\n    if (loading && stocks.length === 0) {\n      return <LoadingSpinner />;\n    }\n\n    if (activeTab === 'market') {\n      return (\n        <>\n          {error && (\n            <div className=\"error-message\">\n              {error}\n              <button onClick={fetchStockData} className=\"retry-button\">\n                Retry\n              </button>\n            </div>\n          )}\n          \n          <div className=\"market-overview\">\n            <div className=\"market-section\">\n              <h2 className=\"section-title\">Currency</h2>\n              <div className=\"stocks-grid\">\n                {usdIls && <CurrencyCard currency={usdIls} />}\n              </div>\n            </div>\n            \n            <div className=\"market-section\">\n              <h2 className=\"section-title\">Major Indices & ETFs</h2>\n              <div className=\"stocks-grid\">\n                {stocks\n                  .filter(stock => ['SPY', 'QQQ', 'IWM', 'RSP', 'MAGS'].includes(stock.symbol))\n                  .map((stock) => (\n                    <StockCard key={stock.symbol} stock={stock} />\n                  ))}\n              </div>\n            </div>\n            \n            <div className=\"market-section\">\n              <h2 className=\"section-title\">Volatility ETFs</h2>\n              <div className=\"stocks-grid\">\n                {stocks\n                  .filter(stock => ['VXX', 'UVXY', 'SVXY'].includes(stock.symbol))\n                  .map((stock) => (\n                    <StockCard key={stock.symbol} stock={stock} />\n                  ))}\n              </div>\n            </div>\n            \n            <div className=\"market-section\">\n              <h2 className=\"section-title\">Individual Stocks</h2>\n              <div className=\"stocks-grid\">\n                {stocks\n                  .filter(stock => ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', 'NVDA', 'META', 'PLTR', 'HIMS'].includes(stock.symbol))\n                  .map((stock) => (\n                    <StockCard key={stock.symbol} stock={stock} />\n                  ))}\n              </div>\n            </div>\n            \n                          <div className=\"market-section\">\n              <h2 className=\"section-title\">Bitcoin & Ethereum</h2>\n              <div className=\"stocks-grid\">\n                {stocks\n                  .filter(stock => ['IBIT', 'ETHE', 'ETHW'].includes(stock.symbol))\n                  .map((stock) => (\n                    <StockCard key={stock.symbol} stock={stock} />\n                  ))}\n              </div>\n            </div>\n          </div>\n          \n          {stocks.length === 0 && !loading && (\n            <div className=\"no-data\">\n              <p>No stock data available.</p>\n              <button onClick={fetchStockData} className=\"retry-button\">\n                Load Data\n              </button>\n            </div>\n          )}\n        </>\n      );\n    }\n\n    return <PortfolioPage />;\n  };\n\n  return (\n    <div className=\"app\">\n      <Header \n        lastUpdated={activeTab === 'market' ? lastUpdated : null}\n        onRefresh={activeTab === 'market' ? fetchStockData : null}\n      />\n\n      <div className=\"tabs\">\n        <button\n          className={`tab-button ${activeTab === 'market' ? 'active' : ''}`}\n          onClick={() => setActiveTab('market')}\n        >\n          Market Overview\n        </button>\n        <button\n          className={`tab-button ${activeTab === 'portfolio' ? 'active' : ''}`}\n          onClick={() => setActiveTab('portfolio')}\n        >\n          Portfolio Management\n        </button>\n      </div>\n\n      <div className=\"content\">\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}