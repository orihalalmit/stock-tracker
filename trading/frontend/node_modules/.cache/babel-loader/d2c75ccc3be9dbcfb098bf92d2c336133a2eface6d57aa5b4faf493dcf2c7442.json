{"ast":null,"code":"var _jsxFileName = \"/Users/orihalamit/Projects/dev/trading/frontend/src/components/Portfolio/PositionsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './PositionsList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PositionsList = ({\n  positions,\n  portfolioId\n}) => {\n  _s();\n  const [currentPrices, setCurrentPrices] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [sortBy, setSortBy] = useState('value'); // value, symbol, shares, gainLoss\n  const [sortOrder, setSortOrder] = useState('desc');\n  useEffect(() => {\n    fetchCurrentPrices();\n    const interval = setInterval(fetchCurrentPrices, 30000);\n    return () => clearInterval(interval);\n  }, [positions]);\n  const fetchCurrentPrices = async () => {\n    if (!positions.length) {\n      setLoading(false);\n      return;\n    }\n    try {\n      const symbols = positions.map(p => p.symbol).join(',');\n      const response = await axios.get(`/api/stocks/snapshots?symbols=${symbols}`);\n      if (response.data && response.data.snapshots) {\n        const prices = {};\n        Object.entries(response.data.snapshots).forEach(([symbol, data]) => {\n          var _data$latestTrade, _data$latestQuote;\n          prices[symbol] = ((_data$latestTrade = data.latestTrade) === null || _data$latestTrade === void 0 ? void 0 : _data$latestTrade.p) || ((_data$latestQuote = data.latestQuote) === null || _data$latestQuote === void 0 ? void 0 : _data$latestQuote.ap) || 0;\n        });\n        setCurrentPrices(prices);\n        setError('');\n      }\n    } catch (err) {\n      setError('Failed to fetch current prices');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  };\n  const formatPercent = value => {\n    return (value >= 0 ? '+' : '') + value.toFixed(2) + '%';\n  };\n  const calculatePositionValue = position => {\n    const currentPrice = currentPrices[position.symbol] || position.averagePrice;\n    return position.shares * currentPrice;\n  };\n  const calculateGainLoss = position => {\n    const currentPrice = currentPrices[position.symbol] || position.averagePrice;\n    return (currentPrice - position.averagePrice) * position.shares;\n  };\n  const calculateGainLossPercent = position => {\n    const currentPrice = currentPrices[position.symbol] || position.averagePrice;\n    return (currentPrice - position.averagePrice) / position.averagePrice * 100;\n  };\n  const handleSort = field => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('desc');\n    }\n  };\n  const sortPositions = positions => {\n    return [...positions].sort((a, b) => {\n      let aValue, bValue;\n      switch (sortBy) {\n        case 'value':\n          aValue = calculatePositionValue(a);\n          bValue = calculatePositionValue(b);\n          break;\n        case 'symbol':\n          return sortOrder === 'asc' ? a.symbol.localeCompare(b.symbol) : b.symbol.localeCompare(a.symbol);\n        case 'shares':\n          aValue = a.shares;\n          bValue = b.shares;\n          break;\n        case 'gainLoss':\n          aValue = calculateGainLoss(a);\n          bValue = calculateGainLoss(b);\n          break;\n        default:\n          return 0;\n      }\n      return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\n    });\n  };\n  if (loading && !Object.keys(currentPrices).length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"positions-loading\",\n      children: \"Loading positions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"positions-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this);\n  }\n  const sortedPositions = sortPositions(positions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"positions-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Portfolio Positions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"positions-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"positions-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('symbol'),\n              className: sortBy === 'symbol' ? 'active' : '',\n              children: [\"Symbol \", sortBy === 'symbol' && (sortOrder === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sector\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('shares'),\n              className: sortBy === 'shares' ? 'active' : '',\n              children: [\"Shares \", sortBy === 'shares' && (sortOrder === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Avg Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Current Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('value'),\n              className: sortBy === 'value' ? 'active' : '',\n              children: [\"Value \", sortBy === 'value' && (sortOrder === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('gainLoss'),\n              className: sortBy === 'gainLoss' ? 'active' : '',\n              children: [\"Gain/Loss \", sortBy === 'gainLoss' && (sortOrder === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sortedPositions.map(position => {\n            const currentPrice = currentPrices[position.symbol] || position.averagePrice;\n            const value = position.shares * currentPrice;\n            const gainLoss = calculateGainLoss(position);\n            const gainLossPercent = calculateGainLossPercent(position);\n            const isPositive = gainLoss >= 0;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"symbol\",\n                children: position.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"sector\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sector-badge\",\n                  children: position.sector\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"shares\",\n                children: position.shares\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"price\",\n                children: formatCurrency(position.averagePrice)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"price\",\n                children: formatCurrency(currentPrice)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"value\",\n                children: formatCurrency(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: `gain-loss ${isPositive ? 'positive' : 'negative'}`,\n                children: [formatCurrency(gainLoss), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"percent\",\n                  children: [\"(\", formatPercent(gainLossPercent), \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)]\n            }, position.symbol, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), positions.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-positions\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No positions in portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(PositionsList, \"FjfVzniaj5pPnAPkBsxZjwueQjU=\");\n_c = PositionsList;\nexport default PositionsList;\nvar _c;\n$RefreshReg$(_c, \"PositionsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PositionsList","positions","portfolioId","_s","currentPrices","setCurrentPrices","loading","setLoading","error","setError","sortBy","setSortBy","sortOrder","setSortOrder","fetchCurrentPrices","interval","setInterval","clearInterval","length","symbols","map","p","symbol","join","response","get","data","snapshots","prices","Object","entries","forEach","_data$latestTrade","_data$latestQuote","latestTrade","latestQuote","ap","err","console","formatCurrency","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","toFixed","calculatePositionValue","position","currentPrice","averagePrice","shares","calculateGainLoss","calculateGainLossPercent","handleSort","field","sortPositions","sort","a","b","aValue","bValue","localeCompare","keys","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedPositions","onClick","gainLoss","gainLossPercent","isPositive","sector","_c","$RefreshReg$"],"sources":["/Users/orihalamit/Projects/dev/trading/frontend/src/components/Portfolio/PositionsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './PositionsList.css';\n\nconst PositionsList = ({ positions, portfolioId }) => {\n  const [currentPrices, setCurrentPrices] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [sortBy, setSortBy] = useState('value'); // value, symbol, shares, gainLoss\n  const [sortOrder, setSortOrder] = useState('desc');\n\n  useEffect(() => {\n    fetchCurrentPrices();\n    const interval = setInterval(fetchCurrentPrices, 30000);\n    return () => clearInterval(interval);\n  }, [positions]);\n\n  const fetchCurrentPrices = async () => {\n    if (!positions.length) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const symbols = positions.map(p => p.symbol).join(',');\n      const response = await axios.get(`/api/stocks/snapshots?symbols=${symbols}`);\n      \n      if (response.data && response.data.snapshots) {\n        const prices = {};\n        Object.entries(response.data.snapshots).forEach(([symbol, data]) => {\n          prices[symbol] = data.latestTrade?.p || data.latestQuote?.ap || 0;\n        });\n        setCurrentPrices(prices);\n        setError('');\n      }\n    } catch (err) {\n      setError('Failed to fetch current prices');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  };\n\n  const formatPercent = (value) => {\n    return (value >= 0 ? '+' : '') + value.toFixed(2) + '%';\n  };\n\n  const calculatePositionValue = (position) => {\n    const currentPrice = currentPrices[position.symbol] || position.averagePrice;\n    return position.shares * currentPrice;\n  };\n\n  const calculateGainLoss = (position) => {\n    const currentPrice = currentPrices[position.symbol] || position.averagePrice;\n    return (currentPrice - position.averagePrice) * position.shares;\n  };\n\n  const calculateGainLossPercent = (position) => {\n    const currentPrice = currentPrices[position.symbol] || position.averagePrice;\n    return ((currentPrice - position.averagePrice) / position.averagePrice) * 100;\n  };\n\n  const handleSort = (field) => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('desc');\n    }\n  };\n\n  const sortPositions = (positions) => {\n    return [...positions].sort((a, b) => {\n      let aValue, bValue;\n\n      switch (sortBy) {\n        case 'value':\n          aValue = calculatePositionValue(a);\n          bValue = calculatePositionValue(b);\n          break;\n        case 'symbol':\n          return sortOrder === 'asc'\n            ? a.symbol.localeCompare(b.symbol)\n            : b.symbol.localeCompare(a.symbol);\n        case 'shares':\n          aValue = a.shares;\n          bValue = b.shares;\n          break;\n        case 'gainLoss':\n          aValue = calculateGainLoss(a);\n          bValue = calculateGainLoss(b);\n          break;\n        default:\n          return 0;\n      }\n\n      return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\n    });\n  };\n\n  if (loading && !Object.keys(currentPrices).length) {\n    return <div className=\"positions-loading\">Loading positions...</div>;\n  }\n\n  if (error) {\n    return <div className=\"positions-error\">{error}</div>;\n  }\n\n  const sortedPositions = sortPositions(positions);\n\n  return (\n    <div className=\"positions-list\">\n      <h3>Portfolio Positions</h3>\n\n      <div className=\"positions-table-container\">\n        <table className=\"positions-table\">\n          <thead>\n            <tr>\n              <th onClick={() => handleSort('symbol')} className={sortBy === 'symbol' ? 'active' : ''}>\n                Symbol {sortBy === 'symbol' && (sortOrder === 'asc' ? '↑' : '↓')}\n              </th>\n              <th>Sector</th>\n              <th onClick={() => handleSort('shares')} className={sortBy === 'shares' ? 'active' : ''}>\n                Shares {sortBy === 'shares' && (sortOrder === 'asc' ? '↑' : '↓')}\n              </th>\n              <th>Avg Price</th>\n              <th>Current Price</th>\n              <th onClick={() => handleSort('value')} className={sortBy === 'value' ? 'active' : ''}>\n                Value {sortBy === 'value' && (sortOrder === 'asc' ? '↑' : '↓')}\n              </th>\n              <th onClick={() => handleSort('gainLoss')} className={sortBy === 'gainLoss' ? 'active' : ''}>\n                Gain/Loss {sortBy === 'gainLoss' && (sortOrder === 'asc' ? '↑' : '↓')}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortedPositions.map((position) => {\n              const currentPrice = currentPrices[position.symbol] || position.averagePrice;\n              const value = position.shares * currentPrice;\n              const gainLoss = calculateGainLoss(position);\n              const gainLossPercent = calculateGainLossPercent(position);\n              const isPositive = gainLoss >= 0;\n\n              return (\n                <tr key={position.symbol}>\n                  <td className=\"symbol\">{position.symbol}</td>\n                  <td className=\"sector\">\n                    <span className=\"sector-badge\">{position.sector}</span>\n                  </td>\n                  <td className=\"shares\">{position.shares}</td>\n                  <td className=\"price\">{formatCurrency(position.averagePrice)}</td>\n                  <td className=\"price\">{formatCurrency(currentPrice)}</td>\n                  <td className=\"value\">{formatCurrency(value)}</td>\n                  <td className={`gain-loss ${isPositive ? 'positive' : 'negative'}`}>\n                    {formatCurrency(gainLoss)}\n                    <span className=\"percent\">({formatPercent(gainLossPercent)})</span>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      {positions.length === 0 && (\n        <div className=\"no-positions\">\n          <p>No positions in portfolio</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PositionsList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}