{"ast":null,"code":"var _jsxFileName = \"/Users/orihalamit/Projects/dev/trading/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport StockCard from './components/StockCard';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport PortfolioPage from './components/Portfolio/PortfolioPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeTab, setActiveTab] = useState('portfolio'); // market, portfolio\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const fetchStockData = async () => {\n    try {\n      setLoading(true);\n      // Define the tickers to display in market overview\n      const tickers = [\n      // Major ETFs and Indices\n      'SPY', 'QQQ', 'IWM', 'VIX', 'RSP',\n      // International/Regional\n      'TA35', 'TA125',\n      // Individual stocks from your portfolio\n      'AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', 'NVDA', 'META',\n      // Specific requested stocks\n      'PLTR', 'HIMS', 'MAGS',\n      // Crypto stocks\n      'COIN', 'MSTR', 'RIOT', 'MARA', 'CLSK'];\n      const response = await axios.get(`/api/stocks/snapshots?symbols=${tickers.join(',')}`);\n      if (response.data && response.data.snapshots) {\n        const stockData = Object.entries(response.data.snapshots).filter(([symbol, data]) => {\n          var _data$latestTrade, _data$latestQuote, _data$latestQuote2;\n          // Filter out symbols with no data\n          return data && (((_data$latestTrade = data.latestTrade) === null || _data$latestTrade === void 0 ? void 0 : _data$latestTrade.p) || ((_data$latestQuote = data.latestQuote) === null || _data$latestQuote === void 0 ? void 0 : _data$latestQuote.ap) || ((_data$latestQuote2 = data.latestQuote) === null || _data$latestQuote2 === void 0 ? void 0 : _data$latestQuote2.bp));\n        }).map(([symbol, data]) => {\n          var _data$latestTrade2, _data$latestQuote3, _data$latestQuote4, _data$dailyBar, _data$prevDailyBar, _data$dailyBar2, _data$dailyBar3, _data$dailyBar4;\n          // Use latestTrade price if available, otherwise use latestQuote ask/bid\n          const currentPrice = ((_data$latestTrade2 = data.latestTrade) === null || _data$latestTrade2 === void 0 ? void 0 : _data$latestTrade2.p) || ((_data$latestQuote3 = data.latestQuote) === null || _data$latestQuote3 === void 0 ? void 0 : _data$latestQuote3.ap) || ((_data$latestQuote4 = data.latestQuote) === null || _data$latestQuote4 === void 0 ? void 0 : _data$latestQuote4.bp) || 0;\n          const openPrice = ((_data$dailyBar = data.dailyBar) === null || _data$dailyBar === void 0 ? void 0 : _data$dailyBar.o) || 0;\n          const prevClose = ((_data$prevDailyBar = data.prevDailyBar) === null || _data$prevDailyBar === void 0 ? void 0 : _data$prevDailyBar.c) || 0;\n\n          // Calculate change from previous close if available, otherwise from open\n          const referencePrice = prevClose || openPrice;\n          const change = referencePrice ? currentPrice - referencePrice : 0;\n          const changePercent = referencePrice ? change / referencePrice * 100 : 0;\n          return {\n            symbol,\n            price: currentPrice,\n            change,\n            changePercent,\n            volume: ((_data$dailyBar2 = data.dailyBar) === null || _data$dailyBar2 === void 0 ? void 0 : _data$dailyBar2.v) || 0,\n            high: ((_data$dailyBar3 = data.dailyBar) === null || _data$dailyBar3 === void 0 ? void 0 : _data$dailyBar3.h) || 0,\n            low: ((_data$dailyBar4 = data.dailyBar) === null || _data$dailyBar4 === void 0 ? void 0 : _data$dailyBar4.l) || 0,\n            open: openPrice,\n            close: prevClose\n          };\n        });\n        setStocks(stockData);\n        setLastUpdated(new Date());\n\n        // Show info message if some symbols were filtered out\n        if (stockData.length < tickers.length) {\n          console.log(`Note: ${tickers.length - stockData.length} symbols were not available or had no data`);\n        }\n        setError(null);\n      } else {\n        setError('No market data available. Please check your API configuration.');\n      }\n    } catch (err) {\n      console.error('Error fetching stock data:', err);\n      setError('Failed to fetch stock data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (activeTab === 'market') {\n      fetchStockData();\n\n      // Auto-refresh every 30 seconds only when market tab is active\n      const interval = setInterval(fetchStockData, 30000);\n      return () => clearInterval(interval);\n    }\n  }, [activeTab]);\n  const renderContent = () => {\n    if (loading && stocks.length === 0) {\n      return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }, this);\n    }\n    if (activeTab === 'market') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchStockData,\n            className: \"retry-button\",\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"market-overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"Major Indices & ETFs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stocks-grid\",\n              children: stocks.filter(stock => ['SPY', 'QQQ', 'IWM', 'VIX', 'RSP'].includes(stock.symbol)).map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n                stock: stock\n              }, stock.symbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"Sector ETFs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stocks-grid\",\n              children: stocks.filter(stock => ['MAGS', 'ARKK', 'XLF', 'XLK', 'XLE'].includes(stock.symbol)).map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n                stock: stock\n              }, stock.symbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"Individual Stocks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stocks-grid\",\n              children: stocks.filter(stock => ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', 'NVDA', 'META'].includes(stock.symbol)).map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n                stock: stock\n              }, stock.symbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), stocks.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No stock data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchStockData,\n            className: \"retry-button\",\n            children: \"Load Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n    return /*#__PURE__*/_jsxDEV(PortfolioPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      lastUpdated: activeTab === 'market' ? lastUpdated : null,\n      onRefresh: activeTab === 'market' ? fetchStockData : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'market' ? 'active' : ''}`,\n        onClick: () => setActiveTab('market'),\n        children: \"Market Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'portfolio' ? 'active' : ''}`,\n        onClick: () => setActiveTab('portfolio'),\n        children: \"Portfolio Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ScyScQbmjFy4WaPBSLWQV6QMCi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","StockCard","LoadingSpinner","PortfolioPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","activeTab","setActiveTab","stocks","setStocks","loading","setLoading","error","setError","lastUpdated","setLastUpdated","fetchStockData","tickers","response","get","join","data","snapshots","stockData","Object","entries","filter","symbol","_data$latestTrade","_data$latestQuote","_data$latestQuote2","latestTrade","p","latestQuote","ap","bp","map","_data$latestTrade2","_data$latestQuote3","_data$latestQuote4","_data$dailyBar","_data$prevDailyBar","_data$dailyBar2","_data$dailyBar3","_data$dailyBar4","currentPrice","openPrice","dailyBar","o","prevClose","prevDailyBar","c","referencePrice","change","changePercent","price","volume","v","high","h","low","l","open","close","Date","length","console","log","err","interval","setInterval","clearInterval","renderContent","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","stock","includes","onRefresh","_c","$RefreshReg$"],"sources":["/Users/orihalamit/Projects/dev/trading/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport StockCard from './components/StockCard';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport PortfolioPage from './components/Portfolio/PortfolioPage';\nimport './App.css';\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState('portfolio'); // market, portfolio\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n\n  const fetchStockData = async () => {\n    try {\n      setLoading(true);\n      // Define the tickers to display in market overview\n      const tickers = [\n        // Major ETFs and Indices\n        'SPY', 'QQQ', 'IWM', 'VIX', 'RSP',\n        // International/Regional\n        'TA35', 'TA125',\n        // Individual stocks from your portfolio\n        'AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', 'NVDA', 'META',\n        // Specific requested stocks\n        'PLTR', 'HIMS', 'MAGS',\n        // Crypto stocks\n        'COIN', 'MSTR', 'RIOT', 'MARA', 'CLSK'\n      ];\n      \n      const response = await axios.get(`/api/stocks/snapshots?symbols=${tickers.join(',')}`);\n      \n      if (response.data && response.data.snapshots) {\n        const stockData = Object.entries(response.data.snapshots)\n          .filter(([symbol, data]) => {\n            // Filter out symbols with no data\n            return data && (data.latestTrade?.p || data.latestQuote?.ap || data.latestQuote?.bp);\n          })\n          .map(([symbol, data]) => {\n            // Use latestTrade price if available, otherwise use latestQuote ask/bid\n            const currentPrice = data.latestTrade?.p || data.latestQuote?.ap || data.latestQuote?.bp || 0;\n            const openPrice = data.dailyBar?.o || 0;\n            const prevClose = data.prevDailyBar?.c || 0;\n            \n            // Calculate change from previous close if available, otherwise from open\n            const referencePrice = prevClose || openPrice;\n            const change = referencePrice ? (currentPrice - referencePrice) : 0;\n            const changePercent = referencePrice ? ((change / referencePrice) * 100) : 0;\n            \n            return {\n              symbol,\n              price: currentPrice,\n              change,\n              changePercent,\n              volume: data.dailyBar?.v || 0,\n              high: data.dailyBar?.h || 0,\n              low: data.dailyBar?.l || 0,\n              open: openPrice,\n              close: prevClose\n            };\n          });\n        \n        setStocks(stockData);\n        setLastUpdated(new Date());\n        \n        // Show info message if some symbols were filtered out\n        if (stockData.length < tickers.length) {\n          console.log(`Note: ${tickers.length - stockData.length} symbols were not available or had no data`);\n        }\n        \n        setError(null);\n      } else {\n        setError('No market data available. Please check your API configuration.');\n      }\n    } catch (err) {\n      console.error('Error fetching stock data:', err);\n      setError('Failed to fetch stock data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (activeTab === 'market') {\n      fetchStockData();\n      \n      // Auto-refresh every 30 seconds only when market tab is active\n      const interval = setInterval(fetchStockData, 30000);\n      \n      return () => clearInterval(interval);\n    }\n  }, [activeTab]);\n\n  const renderContent = () => {\n    if (loading && stocks.length === 0) {\n      return <LoadingSpinner />;\n    }\n\n    if (activeTab === 'market') {\n      return (\n        <>\n          {error && (\n            <div className=\"error-message\">\n              {error}\n              <button onClick={fetchStockData} className=\"retry-button\">\n                Retry\n              </button>\n            </div>\n          )}\n          \n          <div className=\"market-overview\">\n            <div className=\"market-section\">\n              <h2 className=\"section-title\">Major Indices & ETFs</h2>\n              <div className=\"stocks-grid\">\n                {stocks\n                  .filter(stock => ['SPY', 'QQQ', 'IWM', 'VIX', 'RSP'].includes(stock.symbol))\n                  .map((stock) => (\n                    <StockCard key={stock.symbol} stock={stock} />\n                  ))}\n              </div>\n            </div>\n            \n            <div className=\"market-section\">\n              <h2 className=\"section-title\">Sector ETFs</h2>\n              <div className=\"stocks-grid\">\n                {stocks\n                  .filter(stock => ['MAGS', 'ARKK', 'XLF', 'XLK', 'XLE'].includes(stock.symbol))\n                  .map((stock) => (\n                    <StockCard key={stock.symbol} stock={stock} />\n                  ))}\n              </div>\n            </div>\n            \n            <div className=\"market-section\">\n              <h2 className=\"section-title\">Individual Stocks</h2>\n              <div className=\"stocks-grid\">\n                {stocks\n                  .filter(stock => ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', 'NVDA', 'META'].includes(stock.symbol))\n                  .map((stock) => (\n                    <StockCard key={stock.symbol} stock={stock} />\n                  ))}\n              </div>\n            </div>\n          </div>\n          \n          {stocks.length === 0 && !loading && (\n            <div className=\"no-data\">\n              <p>No stock data available.</p>\n              <button onClick={fetchStockData} className=\"retry-button\">\n                Load Data\n              </button>\n            </div>\n          )}\n        </>\n      );\n    }\n\n    return <PortfolioPage />;\n  };\n\n  return (\n    <div className=\"app\">\n      <Header \n        lastUpdated={activeTab === 'market' ? lastUpdated : null}\n        onRefresh={activeTab === 'market' ? fetchStockData : null}\n      />\n\n      <div className=\"tabs\">\n        <button\n          className={`tab-button ${activeTab === 'market' ? 'active' : ''}`}\n          onClick={() => setActiveTab('market')}\n        >\n          Market Overview\n        </button>\n        <button\n          className={`tab-button ${activeTab === 'portfolio' ? 'active' : ''}`}\n          onClick={() => setActiveTab('portfolio')}\n        >\n          Portfolio Management\n        </button>\n      </div>\n\n      <div className=\"content\">\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}